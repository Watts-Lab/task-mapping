geom_pointrange(aes(ymin=Variance-Error, ymax=Variance+Error)) +
# geom_point(aes(x=summaryQuestionOnlyData$Question,y=summaryQuestionOnlyData$Variance)) +
# scale_x_discrete(labels=summaryData$Quest) +
# scale_y_continuous(limits = c(0,.3)) +
labs(x="Mean variance") +
coord_flip() +
theme_minimal()
ggplot(summaryQuestionData, aes(Question,Variance, width=.75,color=Type)) +
geom_pointrange(aes(ymin=Variance-Error, ymax=Variance+Error)) +
scale_x_discrete(labels=summaryData$Quest) +
theme(legend.position = "bottom") +
labs(x="Mean variance",color="Answer type") +
coord_flip() +
theme_minimal()
questionData <- myData %>%
select(-contains("unclear"), -contains("details"),-AssignmentId) %>%
gather(key="Label",value="Status",-Task,-WorkerId) %>%
filter(Status == TRUE) %>%
separate(Label,c("Type","id","Answer")) %>%
select(-Status,-Type) %>%
mutate(
Answer = case_when(
Answer == "true" ~ 1,
Answer == "false" ~ 0,
Answer == "0" ~ 0/4,
Answer == "1" ~ 1/4,
Answer == "2" ~ 2/4,
Answer == "3" ~ 3/4,
Answer == "4" ~ 4/4,
Answer == "emotor" ~ 0/4,
Answer == "mmotor" ~ 1/4,
Answer == "even" ~ 2/4,
Answer == "mMental" ~ 3/4,
Answer == "eMental" ~ 4/4,
Answer == "intellective" ~ 0/2,
Answer == "both" ~ 1/2,
Answer == "intermediate" ~ 2/2,
Answer == "judgmental" ~ 2/2
)
) %>%
inner_join(questions) %>%
mutate(
Question = question,
Type = case_when(
type == "tf" ~ "Logical",
type == "complexity" ~ "Logical",
type == "complexity" ~ "Logical",
type == "l5pt" ~ "5pt Ordinal",
type == "mentalMotor" ~ "5pt Ordinal",
type == "intellective" ~ "4pt Nominal"
)
) %>%
select(-type) %>%
mutate(
question = substr(question,1,35),
id = sub("q","",id)
) %>%
unite(Quest,question,id,sep=" - ")
questions <- read_csv("Questions.csv")
questions <- questions %>%
mutate(question = factor(question,levels=rev(questions$question)))
myData <- read_csv("P2data.csv") %>%
mutate(
Task = Input.taskName
) %>%
select(-contains("unclear.unclear")) %>%
select(Task,contains("Answer"),WorkerId,AssignmentId)
questionData <- myData %>%
select(-contains("unclear"), -contains("details"),-AssignmentId) %>%
gather(key="Label",value="Status",-Task,-WorkerId) %>%
filter(Status == TRUE) %>%
separate(Label,c("Type","id","Answer")) %>%
select(-Status,-Type) %>%
mutate(
Answer = case_when(
Answer == "true" ~ 1,
Answer == "false" ~ 0,
Answer == "0" ~ 0/4,
Answer == "1" ~ 1/4,
Answer == "2" ~ 2/4,
Answer == "3" ~ 3/4,
Answer == "4" ~ 4/4,
Answer == "emotor" ~ 0/4,
Answer == "mmotor" ~ 1/4,
Answer == "even" ~ 2/4,
Answer == "mMental" ~ 3/4,
Answer == "eMental" ~ 4/4,
Answer == "intellective" ~ 0/2,
Answer == "both" ~ 1/2,
Answer == "intermediate" ~ 2/2,
Answer == "judgmental" ~ 2/2
)
) %>%
inner_join(questions) %>%
mutate(
Question = question,
Type = case_when(
type == "tf" ~ "Logical",
type == "complexity" ~ "Logical",
type == "complexity" ~ "Logical",
type == "l5pt" ~ "5pt Ordinal",
type == "mentalMotor" ~ "5pt Ordinal",
type == "intellective" ~ "4pt Nominal"
)
) %>%
select(-type) %>%
mutate(
question = substr(question,1,35),
id = sub("q","",id)
) %>%
unite(Quest,question,id,sep=" - ")
questions <- read_csv("Questions.csv")
questions <- questions %>%
mutate(question = factor(question,levels=rev(questions$question)))
myData <- read_csv("P2data.csv") %>%
mutate(
Task = Input.taskName
) %>%
select(-contains("unclear.unclear")) %>%
select(Task,contains("Answer"),WorkerId,AssignmentId)
questionData <- myData %>%
select(-contains("unclear"), -contains("details"),-AssignmentId) %>%
gather(key="Label",value="Status",-Task,-WorkerId) %>%
filter(Status == TRUE) %>%
separate(Label,c("Type","id","Answer")) %>%
select(-Status,-Type) %>%
mutate(
Answer = case_when(
Answer == "true" ~ 1,
Answer == "false" ~ 0,
Answer == "0" ~ 0/4,
Answer == "1" ~ 1/4,
Answer == "2" ~ 2/4,
Answer == "3" ~ 3/4,
Answer == "4" ~ 4/4,
Answer == "emotor" ~ 0/4,
Answer == "mmotor" ~ 1/4,
Answer == "even" ~ 2/4,
Answer == "mMental" ~ 3/4,
Answer == "eMental" ~ 4/4,
Answer == "intellective" ~ 0/2,
Answer == "both" ~ 1/2,
Answer == "intermediate" ~ 2/2,
Answer == "judgmental" ~ 2/2
)
) %>%
inner_join(questions) %>%
mutate(
Question = question,
Type = case_when(
type == "tf" ~ "Logical",
type == "complexity" ~ "Logical",
type == "complexity" ~ "Logical",
type == "l5pt" ~ "5pt Ordinal",
type == "mentalMotor" ~ "5pt Ordinal",
type == "intellective" ~ "4pt Nominal"
)
) %>%
select(-type) %>%
mutate(
question = substr(question,1,35),
id = sub("q","",id)
) %>%
unite(Quest,question,id,sep=" - ")
summaryData <- questionData %>% group_by(Task,Question,Quest,Type) %>%
summarise(
Median = median(Answer),
Mean = mean(Answer),
Variance = var(Answer),
Error = sd(Answer)/sqrt(n())
)
ggplot(summaryData, aes(Question,Variance,fill=Task, width=.75)) +
geom_col(position = "dodge") +
scale_x_discrete(labels=summaryData$Quest) +
# scale_y_continuous(limits = c(0,.3)) +
labs(shape = "Answer Type") +
coord_flip() +
theme_minimal()
ggplot(summaryData, aes(Question,Mean,color=Task)) +
geom_pointrange(aes(ymin=Mean-Error, ymax=Mean+Error)) +
# geom_point(aes(x=Question,y=Median)) +
scale_x_discrete(labels=summaryData$Quest) +
# labs(shape = "Answer Type") +
coord_flip() +
theme_minimal()
summaryQuestionData <- summaryData %>% group_by(Question,Quest,Type) %>%
summarise(
Error = sd(Variance)/sqrt(n()),
Variance = mean(Variance)
)
ggplot(summaryQuestionData, aes(Question,Variance, width=.75,color=Type)) +
geom_pointrange(aes(ymin=Variance-Error, ymax=Variance+Error)) +
scale_x_discrete(labels=summaryData$Quest) +
labs(x="Mean variance",color="Answer type") +
coord_flip() +
theme_minimal()
summaryTaskData <- summaryData %>% group_by(Task) %>%
summarise(
Error = sd(Variance)/sqrt(n()),
Variance = mean(Variance)
)
ggplot(summaryTaskData, aes(Task,Variance, width=.75)) +
geom_pointrange(aes(ymin=Variance-Error, ymax=Variance+Error)) +
# geom_point(aes(x=summaryQuestionOnlyData$Question,y=summaryQuestionOnlyData$Variance)) +
# scale_x_discrete(labels=summaryData$Quest) +
# scale_y_continuous(limits = c(0,.3)) +
labs(x="Mean variance") +
coord_flip() +
theme_minimal()
ggplot(summaryQuestionData, aes(Question,Variance, width=.75,color=Type)) +
geom_pointrange(aes(ymin=Variance-Error, ymax=Variance+Error)) +
scale_x_discrete(labels=summaryData$Quest) +
labs(x="Mean variance",color="Answer type") +
coord_flip() +
theme_minimal()
ggplot(summaryQuestionData, aes(Question,Variance, width=.75,color=Type)) +
geom_pointrange(aes(ymin=Variance-Error, ymax=Variance+Error)) +
scale_x_discrete(labels=summaryData$Quest) +
labs(y="Mean variance",color="Answer type") +
coord_flip() +
theme_minimal()
ggplot(summaryTaskData, aes(Task,Variance, width=.75)) +
geom_pointrange(aes(ymin=Variance-Error, ymax=Variance+Error)) +
# geom_point(aes(x=summaryQuestionOnlyData$Question,y=summaryQuestionOnlyData$Variance)) +
# scale_x_discrete(labels=summaryData$Quest) +
# scale_y_continuous(limits = c(0,.3)) +
labs(y="Mean variance") +
coord_flip() +
theme_minimal()
summaryData <- questionData %>% group_by(Task,Question,Quest,Type) %>%
summarise(
Median = median(Answer),
Mean = mean(Answer),
Variance = var(Answer),
Error = sd(Answer)/sqrt(n())
)
ggplot(summaryData, aes(Question,Variance,fill=Task, width=.75)) +
geom_col(position = "dodge") +
scale_x_discrete(labels=summaryData$Quest) +
# scale_y_continuous(limits = c(0,.3)) +
labs(shape = "Answer Type") +
coord_flip() +
theme_minimal()
ggplot(summaryData, aes(Question,Mean,color=Task)) +
geom_pointrange(aes(ymin=Mean-Error, ymax=Mean+Error)) +
# geom_point(aes(x=Question,y=Median)) +
scale_x_discrete(labels=summaryData$Quest) +
# labs(shape = "Answer Type") +
coord_flip() +
theme_minimal()
summaryQuestionData <- summaryData %>% group_by(Question,Quest,Type) %>%
summarise(
Error = sd(Variance)/sqrt(n()),
Variance = mean(Variance)
)
ggplot(summaryQuestionData, aes(Question,Variance, width=.75,color=Type)) +
geom_pointrange(aes(ymin=Variance-Error, ymax=Variance+Error)) +
scale_x_discrete(labels=summaryData$Quest) +
labs(y="Mean variance",color="Answer type") +
coord_flip() +
theme_minimal()
summaryTaskData <- summaryData %>% group_by(Task) %>%
summarise(
Error = sd(Variance)/sqrt(n()),
Variance = mean(Variance)
)
ggplot(summaryTaskData, aes(Task,Variance, width=.75)) +
geom_pointrange(aes(ymin=Variance-Error, ymax=Variance+Error)) +
# geom_point(aes(x=summaryQuestionOnlyData$Question,y=summaryQuestionOnlyData$Variance)) +
# scale_x_discrete(labels=summaryData$Quest) +
# scale_y_continuous(limits = c(0,.3)) +
labs(y="Mean variance") +
coord_flip() +
theme_minimal()
mean(summaryQuestionData$Variance) == mean(summaryTaskData$Variance)
summaryData <- questionData %>% group_by(Task,Question,Quest,Type) %>%
summarise(
Median = median(Answer),
Mean = mean(Answer),
Variance = var(Answer),
Error = sd(Answer)/sqrt(n())
)
ggplot(summaryData, aes(Question,Variance,fill=Task, width=.75)) +
geom_col(position = "dodge") +
scale_x_discrete(labels=summaryData$Quest) +
# scale_y_continuous(limits = c(0,.3)) +
labs(shape = "Answer Type") +
coord_flip() +
theme_minimal()
ggplot(summaryData, aes(Question,Mean,color=Task)) +
geom_pointrange(aes(ymin=Mean-Error, ymax=Mean+Error)) +
# geom_point(aes(x=Question,y=Median)) +
scale_x_discrete(labels=summaryData$Quest) +
# labs(shape = "Answer Type") +
coord_flip() +
theme_minimal()
summaryQuestionData <- summaryData %>% group_by(Question,Quest,Type) %>%
summarise(
Error = sd(Variance)/sqrt(n()),
Variance = mean(Variance)
)
ggplot(summaryQuestionData, aes(Question,Variance, width=.75,color=Type)) +
geom_pointrange(aes(ymin=Variance-Error, ymax=Variance+Error)) +
scale_x_discrete(labels=summaryData$Quest) +
labs(y="Mean variance",color="Answer type") +
coord_flip() +
theme_minimal()
summaryTaskData <- summaryData %>% group_by(Task) %>%
summarise(
Error = sd(Variance)/sqrt(n()),
Variance = mean(Variance)
)
ggplot(summaryTaskData, aes(Task,Variance, width=.75)) +
geom_pointrange(aes(ymin=Variance-Error, ymax=Variance+Error)) +
# geom_point(aes(x=summaryQuestionOnlyData$Question,y=summaryQuestionOnlyData$Variance)) +
# scale_x_discrete(labels=summaryData$Quest) +
# scale_y_continuous(limits = c(0,.3)) +
labs(y="Mean variance") +
coord_flip() +
theme_minimal()
View(summaryData)
summaryData <- questionData %>% group_by(Task,Question,Quest,Type) %>%
summarise(
Median = median(Answer),
Mean = mean(Answer),
Variance = var(Answer),
Error = sd(Answer)/sqrt(n())
)
ggplot(summaryData, aes(Question,Variance,fill=Task, width=.75)) +
geom_col(position = "dodge") +
scale_x_discrete(labels=summaryData$Quest) +
# scale_y_continuous(limits = c(0,.3)) +
labs(shape = "Answer Type") +
coord_flip() +
theme_minimal()
ggplot(summaryData, aes(Question,Mean,color=Task)) +
geom_pointrange(aes(ymin=Mean-Error, ymax=Mean+Error)) +
# geom_point(aes(x=Question,y=Median)) +
scale_x_discrete(labels=summaryData$Quest) +
# labs(shape = "Answer Type") +
coord_flip() +
theme_minimal()
summaryQuestionData <- summaryData %>% group_by(Question,Quest,Type) %>%
summarise(
Error = sd(Variance)/sqrt(n()),
Variance = mean(Variance)
)
ggplot(summaryQuestionData, aes(Question,Variance, width=.75,color=Type)) +
geom_pointrange(aes(ymin=Variance-Error, ymax=Variance+Error)) +
scale_x_discrete(labels=summaryData$Quest) +
labs(y="Mean variance",color="Answer type") +
coord_flip() +
theme_minimal()
summaryTaskData <- summaryData %>% group_by(Task) %>%
summarise(
Error = sd(Variance)/sqrt(n()),
Variance = mean(Variance)
)
ggplot(summaryTaskData, aes(Task,Variance, width=.75)) +
geom_pointrange(aes(ymin=Variance-Error, ymax=Variance+Error)) +
# geom_point(aes(x=summaryQuestionOnlyData$Question,y=summaryQuestionOnlyData$Variance)) +
# scale_x_discrete(labels=summaryData$Quest) +
# scale_y_continuous(limits = c(0,.3)) +
labs(y="Mean variance") +
coord_flip() +
theme_minimal()
summaryData %>%
summaryData %>% select(Task,Quest,Question,Variance)
summaryData <- questionData %>% group_by(Task,Question,Quest,Type) %>%
summarise(
Median = median(Answer),
Mean = mean(Answer),
Variance = var(Answer),
Error = sd(Answer)/sqrt(n())
)
summaryQuestionData <- summaryData %>% group_by(Question,Quest,Type) %>%
summarise(
Error = sd(Variance)/sqrt(n()),
Variance = mean(Variance)
)
ggplot(summaryQuestionData, aes(Question,Variance, width=.75,color=Type)) +
geom_pointrange(aes(ymin=Variance-Error, ymax=Variance+Error)) +
scale_x_discrete(labels=summaryData$Quest) +
labs(y="Mean variance",color="Answer type") +
coord_flip() +
theme_minimal()
summaryTaskData <- summaryData %>% group_by(Task) %>%
summarise(
Error = sd(Variance)/sqrt(n()),
Variance = mean(Variance)
)
ggplot(summaryTaskData, aes(Task,Variance, width=.75)) +
geom_pointrange(aes(ymin=Variance-Error, ymax=Variance+Error)) +
# geom_point(aes(x=summaryQuestionOnlyData$Question,y=summaryQuestionOnlyData$Variance)) +
# scale_x_discrete(labels=summaryData$Quest) +
# scale_y_continuous(limits = c(0,.3)) +
labs(y="Mean variance") +
coord_flip() +
theme_minimal()
summaryData %>% select(Task,Quest,Question,Variance)
summaryData <- questionData %>% group_by(Task,Question,Quest,Type) %>%
summarise(
Median = median(Answer),
Mean = mean(Answer),
Variance = var(Answer),
Error = sd(Answer)/sqrt(n())
)
summaryQuestionData <- summaryData %>% group_by(Question,Quest,Type) %>%
summarise(
Error = sd(Variance)/sqrt(n()),
Variance = mean(Variance)
)
ggplot(summaryQuestionData, aes(Question,Variance, width=.75,color=Type)) +
geom_pointrange(aes(ymin=Variance-Error, ymax=Variance+Error)) +
scale_x_discrete(labels=summaryData$Quest) +
labs(y="Mean variance",color="Answer type") +
coord_flip() +
theme_minimal()
summaryTaskData <- summaryData %>% group_by(Task) %>%
summarise(
Error = sd(Variance)/sqrt(n()),
Variance = mean(Variance)
)
ggplot(summaryTaskData, aes(Task,Variance, width=.75)) +
geom_pointrange(aes(ymin=Variance-Error, ymax=Variance+Error)) +
# geom_point(aes(x=summaryQuestionOnlyData$Question,y=summaryQuestionOnlyData$Variance)) +
# scale_x_discrete(labels=summaryData$Quest) +
# scale_y_continuous(limits = c(0,.3)) +
labs(y="Mean variance") +
coord_flip() +
theme_minimal()
summaryData %>% select(Task,Quest,Question,Variance)
summaryData %>% select(Task,Quest,Question,Variance) %>%
spread(Taks,Variance)
summaryData %>% select(Task,Quest,Question,Variance) %>%
spread(Task, Variance)
matrixData = summaryData %>% select(Task,Quest,Question,Variance) %>%
spread(Task, Variance)
View(matrixData)
matrixData = summaryData %>% select(Task,Quest,Question,Variance) %>%
spread(Task, Variance) %>%
ggplot(matrixData,aes(Task,Question)) +
geom_tile(aes(fill = Variance))
matrixData = summaryData %>% select(Task,Quest,Question,Variance) %>%
spread(Task, Variance)
ggplot(matrixData,aes(Task,Question)) +
geom_tile(aes(fill = Variance))
ggplot(matrixData,aes(Task,Question)) +
geom_tile(aes(fill = Variance))
heatmap(matrixData)
matrixData = summaryData %>% select(Task,Question,Variance) %>%
spread(Task, Variance) %>%
heatmap(matrixData)
matrixData = summaryData %>% select(Task,Question,Variance) %>%
spread(Task, Variance)
heatmap(matrixData)
matrixData = as.matrix(summaryData %>% select(Task,Question,Variance) %>%
spread(Task, Variance)
)
heatmap(matrixData)
View(matrixData)
matrixData = as.matrix(summaryData %>% select(Task,Question,Variance) %>%
spread(Task, Variance)
)
View(matrixData)
matrixData = summaryData %>% select(Task,Question,Variance) %>%
spread(Task, Variance)
matrixData = summaryData %>% select(Task,Question,Variance) %>%
spread(Task, Variance)
matrixData = summaryData %>% select(Task,Question,Quest,Variance) %>%
spread(Task, Variance)
ggplot(summaryData,aes(Task,Question)) +
geom_tile(aes(fill = Variance))
ggplot(summaryData,aes(Task,Quest)) +
geom_tile(aes(fill = Variance))
ggplot(summaryData,aes(Task,Question)) +
geom_tile(aes(fill = Variance)) +
scale_y_discrete(labels=summaryData$Quest) +
ggplot(summaryData,aes(Task,Question)) +
geom_tile(aes(fill = Variance)) +
scale_y_discrete(labels=summaryData$Quest)
ggplot(summaryData,aes(Task,Question)) +
geom_tile(aes(fill = Variance)) +
scale_y_discrete(labels=summaryData$Quest)
ggplot(summaryData,aes(Task,Question)) +
geom_tile(aes(fill = Variance)) +
scale_y_discrete(labels=summaryData$Quest) +
theme_void()
ggplot(summaryData,aes(Task,Question)) +
geom_tile(aes(fill = Variance)) +
scale_y_discrete(labels=summaryData$Quest) +
theme_minimal()
ggplot(summaryData,aes(Task,Question)) +
geom_tile(aes(fill = Variance)) +
scale_y_discrete(labels=summaryData$Quest) +
opts(legend.position = "none") +
theme_minimal()
ggplot(summaryData,aes(Task,Question)) +
geom_tile(aes(fill = Variance)) +
scale_y_discrete(labels=summaryData$Quest) +
opts(legend.position = "none") +
theme_minimal()
ggplot(summaryData,aes(Task,Question)) +
geom_tile(aes(fill = Variance)) +
scale_y_discrete(labels=summaryData$Quest) +
labs(legend.position = "none") +
theme_minimal()
ggplot(summaryData,aes(Task,Question)) +
geom_tile(aes(fill = Variance)) +
scale_y_discrete(labels=summaryData$Quest) +
legend(position = "none") +
theme_minimal()
