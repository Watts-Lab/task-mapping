task,html,github,path,script
Euclidean traveling salesperson,"<h2>Euclidean traveling salesperson</h2><br><h2>1. Set-Up</h2><p>Participants get a map with multiple cities, which are displayed as dots on the screen. These dots can be connected by different &ldquo;paths&rdquo; by clicking on two dots one after the other. For example, clicking on point A, then point B, would draw a &ldquo;path&rdquo; between A and B. All participants, who are working on individual screens, are shown a shared map of the cities and can click and interact with it simultaneously.</p><br><h2>2. Objective / Goal</h2><p>The goal is to find and select the precise shortest path through the cities within a fixed amount of time. This is the sequence of cities corresponding to the shortest possible path to traverse through all of the cities, forming a cycle (or loop). In other words, the participant should click through the dots in a sequence, thus drawing a path that touches every city exactly once, and the first city twice: you can think of it as a &ldquo;traveling salesman&rdquo; who visits each city on the map before returning to his home city. Imagine that the shortest path involves going from A, to B, to C, to D. In that example, the participant&#39;s goal would be to find this path, and then click the cities in that order: A, B, C, D, A.</p><p>Participants are evaluated on how close the path they found was to the optimal shortest path. They will be able to see the length of the current path they found, but they will not be told that they have reached the optimum.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/a27330d4c7a26ebac960b30d32d5dee6cfed1420,tasks/summaries/Euclidean traveling salesperson-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Moral Reasoning (Disciplinary Action Case),"<h2>Moral Reasoning (Disciplinary Action Case)</h2><br><h2>1. Set-Up</h2><p>Participants read a fictitious, controversial case in which a college basketball player bribed an instructor to change his grade on an exam in order to maintain his eligibility on the team.</p><p>Participants are also given a list of potential actions that the college could take in response, in which the student and/or instructor could be given a punishment or consequence. Examples include:</p><p>(1.) Lowering Student&#39;s Grade (2.) Student Suspension (3.) Punishment from Student&#39;s Basketball Team (4.) Instructor Punishment (5.) Preventing the Instructor from Getting Future Position and/or Promotion</p><p>These possible courses of action are further challenged by conflicting interests of the faculty, college administration, and the athletic department.</p><br><h2>2. Objective / Goal</h2><p>Although there is no right or wrong course of action among the options, the goal is to select one of the courses of action.</p><p>Participants had to try to make sense of the different stakeholders&#39; conflicting interests, get agreement from team members, and make a final choice about how to handle the disciplinary situation.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/edb737be2692b45c969a7d55443b1419b8a27f91,tasks/summaries/Moral Reasoning (Disciplinary Action Case)-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
To evacuate or not to evacuate,"<h2>To evacuate or not to evacuate</h2><br><h2>1. Set-Up</h2><p>Participants read about a situation in which &#39;a disaster may or may not strike.&#39; They are given information about the risk level of the disaster, as well as a button to &ldquo;evacuate&rdquo; from the disaster. </p><p>Evacuating from the disaster costs money &mdash; participants lose half their bonus if they choose to evacuate. However, if they don&#39;t evacuate and the disaster happens, then they lose their entire bonus. Therefore, this task is about weighing up the different risks and rewards of clicking the &ldquo;evacuate&rdquo; button.</p><p>Participants only find out whether the disaster happened or not at the very end of the game. All participants are equally affected by the disaster, but they make their selection for evacuation individually.</p><br><h2>2. Objective / Goal</h2><p>The goal is to make a decision regarding whether or not to evacuate. Participants have a limited amount of time to make their decision.</p><p>Choosing NOT to evacuate means that there is high risk (you could get nothing), but potential for a high reward. On the other hand, choosing to evacuate has a low risk but a smaller reward.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/641ecc0c5f0cd7e57f990b7bc10b833b660f2311,tasks/summaries/To evacuate or not to evacuate-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Allocating resources to programs,"<h2>Allocating resources to programs</h2><br><h2>1. Set-Up</h2><p>Partipants are given a list of complex competing programs, along with details of those programs. All participants get a list with the same programs. For example, participants could receive the following list:</p><p>(1.) To purchase a new computer system for the county government in order to hold local taxes constant. (2.) To establish a community arts program featuring art, music, and dance programs for children and adults. (3.) To establish an additional shelter for the homeless in the community.</p><br><h2>2. Objective / Goal</h2><p>The goal is to collectively decide how to allocate $500,000 between three competing programs within the time limit. As each program is designed to appeal to personal values, there is no right, wrong, or optimal way of allocation, and the purpose of the task is to resolve different conflicts in people&#39;s values and interests.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/8a13990b67bb3d8e5efc243643b0b59a306e35e6,tasks/summaries/Allocating resources to programs-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Shopping plan,"<h2>Shopping plan</h2><br><h2>1. Set-Up</h2><p>Each participant has a grocery list and a map that shows distances and times between each grocery store, as well as a list of potential items to purchase and how many points they are worth.</p><br><h2>2. Objective / Goal</h2><p>Participants have to plan a shopping trip as though they were all residents of the same house sharing the same car. The goal is to purchase as many high-quality items as possible in a fixed amount of time, and to get the highest number of points by considering tradeoffs between price, quality, and driving time. Participants gain points for every item that they are able to plan to purchase. Getting anything less than the maximum number of points will lead to partial credit.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/26c52d545ff3c5beee6fc622a7b72fe2f5633fa6,tasks/summaries/Shopping plan-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Word completion given starting letter,"<h2>Word completion given starting letter</h2><br><h2>1. Set-Up</h2><p>Participants are given a starting letter and ending letter for words. For example, the start letter could be &ldquo;S&rdquo; and the end letter could be &ldquo;N.&rdquo; The starting and ending letters are selected such that there is always a nonzero set of English words that can be created.</p><br><h2>2. Objective / Goal</h2><p>The goal is to generate a list of valid English words using the starting and ending letter provided. Using the previous example, participants could be asked to generate words like &ldquo;SPIN,&rdquo; which starts with &ldquo;S&rdquo; and ends with &ldquo;N.&rdquo; Participants must generate the maximum number of valid words they can within a fixed amount of time. Nonvalid words will be rejected by the system.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/8ea9342a87412579fa804f337d0f75b1ba2902d7,tasks/summaries/Word completion given starting letter-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Graph coloring task,"<h2>Graph coloring task</h2><br><h2>1. Set-Up</h2><p>Participants are given one or more &ldquo;graph coloring problems&rdquo;. These are pictures of different topology/network graphs. </p><p>For context, these look like many different nodes (points), which are connected by various edges. Imagine, for example, a picture of a social network: each person in the network is a &ldquo;node,&rdquo; and each of their friends is an &ldquo;edge.&rdquo;</p><p>In this case, all participants have access to and can interact with a shared graph. Participants will also be given a limited set of colors, with a larger number of colors than the minimum required to complete the task successfully.</p><br><h2>2. Objective / Goal</h2><p>The goal is to use the colors given to &ldquo;color&rdquo; the entire network without conflicts. This means that participants need to assign each node in the graph a color, ensuring that no two connected nodes share the same color. Using our social network example, if Person A and Person B are friends (which means they are connected), they cannot be assigned the same color. Participants must successfully color all nodes and resolve all conflicts within a specified amount of time, or receive no credit.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/8668e1f05c81b8f8e0f44381e897442bed258d23,tasks/summaries/Graph coloring task-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Summarize Discussion,"<h2>Summarize Discussion</h2><br><h2>1. Set-Up</h2><p>For this task, participants are given an open-ended discussion statement about a specific topic. The statement may be a question like, &ldquo;what makes for success in our culture?&rdquo; or &ldquo;should birth control be made available to anyone without a prescription?&rdquo; Everyone in the same team gets the same question.</p><br><h2>2. Objective / Goal</h2><p>Participants are asked to talk about and submit a response to the discussion statement &mdash; that is, they need to turn in a written summary of their arguments or answers to the question given to them. (For example, &ldquo;Yes, birth control should be made available to anyone for three reasons, Number 1&hellip;&rdquo; or &ldquo;No, we should not make birth control available to everyone. You should need a prescription because &hellip;&rdquo;) If people disagree, the summary needs to resolve and synthesize the pros and cons.</p><p>Participants have a specific time limit for completing the writeup. They are graded on the quality of their final written summary.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/b9a451e13133e78d3cf691ee946f351cbf9df8e0,tasks/summaries/Summarize Discussion-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
9 Dot Problem,"<h2>9 Dot Problem</h2><br><h2>1. Set-Up</h2><p>Participants are given a 3x3 grid of nine dots, which is shared by everyone completing the task.</p><br><h2>2. Objective / Goal</h2><p>Within a limited amount of time, participants must connect all nine dots (e.g., draw a line that passes through them) using no more than four lines, and may not retrace any lines.</p><p>Participants will be able to visually tell that they have successfully met these criteria. They are given full credit if they accomplish this task, and no credit if they fail.</p><p>An important note is that there is really only one &ldquo;correct&rdquo; answer to this question &mdash; that is, the way to connect the nine dots actually requires the participant to go &ldquo;outside&rdquo; the boundaries of the 3x3 grid, or else it cannot be done. The true goal of this task is to find this optimal answer. </p><p>Participants who do not think &ldquo;outside the box&rdquo; therefore usually have difficulty completing this task. Once they are shown that the answer involves going outside of the box, they usually have an &ldquo;aha&rdquo; moment and do well on the task in the future.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/310e683a350d63f825bb93b482fe3eea0b77906d,tasks/summaries/9 Dot Problem-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Estimating pages of a book,"<h2>Estimating pages of a book</h2><br><h2>1. Set-Up</h2><p>Participants see images of the page edges of a book.</p><br><h2>2. Objective / Goal</h2><p>The goal is to guess the exact number of pages that the book has, using only the image of the page edges. </p><p>Participants are rewarded for being as precise and as close to the true number of pages as possible. They get points proportional to how many pages &ldquo;off&rdquo; they were, corrected for the total number of pages in the book. For example, 10 pages wrong out of a 400-page book is a smaller error than 10 pages wrong out of a 50-page book. Participants are not told if their judgment is exactly correct. Finally, participants have a limited amount of time to make their judgment.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/270ff70411e741cdaa06c1e36df92e47da0e44cb,tasks/summaries/Estimating pages of a book-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Image rating,"<h2>Image rating</h2><br><h2>1. Set-Up</h2><p>Participants see pictures of a series of products and accompanying slogans for them. They then have the opportunity to rate the product and slogan on a scale from 1 (worst) to 10 (best). Participants see these pictures one at a time.</p><br><h2>2. Objective / Goal</h2><p>The goal is to give a rating that is as close as possible to how other Americans viewed the product and slogan. The challenge is to be exact in predicting how other Americans think. </p><p>Participants receive points based on how close their ratings are to the &ldquo;truth.&rdquo; The &ldquo;truth&rdquo; is calculated based on the average poll response of 100 American users on Amazon Mechanical Turk. Participants are NOT told whether their guesses are correct or how many points they earned.</p><p>Finally, participants have to make their decisions within a limited amount of time.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/81647e66eb5682dece8b3d39f5c8756372d951e5,tasks/summaries/Image rating-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Recall videos,<h2>Recall videos</h2><br><h2>1. Set-Up</h2><p>Participants are shown a 90-second video several times.</p><br><h2>2. Objective / Goal</h2><p>The goal is to correctly answer a set of questions about what occurred in the video within a fixed amount of time. Participants receive points for each correct answer and maximize their score by correctly answering as many questions as they can.</p>,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/60d448472fd3b6772287c8245757b5f166cae6f4,tasks/summaries/Recall videos-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Wildcat Wells,"<h2>Wildcat Wells</h2><br><h2>1. Set-Up</h2><p>Participants see a realistic-looking 2D desert map with dots on it that represent hidden oil fields. All dots look the same to participants, but some &ldquo;wells&rdquo; are wider and deeper than others and contain more oil, which earns the participant more points. As they play, participants can see the total number of points that they have accumulated throughout the game.</p><br><h2>2. Objective / Goal</h2><p>The goal is to drill as much oil as possible within a fixed amount of time by choosing the dots corresponding to &ldquo;wells&rdquo; that the participant wants to select. Participants earn points proportional to the amount of oil they discover. Thus, the goal is to try to find the &ldquo;wells&rdquo; with the most oil before the time runs out.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/032b38726446129214960a511b03c67285f04b33,tasks/summaries/Wildcat Wells-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Word completion given part of word,"<h2>Word completion given part of word</h2><br><h2>1. Set-Up</h2><p>Participants get a set of 36 words with 2-3 letters missing. Each word has a specific correct answer. For example, &ldquo; _ ech_ _ que&rdquo; would be &ldquo;technique&rdquo;.</p><br><h2>2. Objective / Goal</h2><p>The goal is to complete as many words as possible within a fixed amount of time. Participants get the maximum score for completing all words correctly and maximize their score by completing as many of the words as they can.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/3b402305ea14b1e5ff863223523703eb58b38075,tasks/summaries/Word completion given part of word-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Letters-to-numbers problems (cryptography),"<h2>Letters-to-numbers problems (cryptography)</h2><br><h2>1. Set-Up</h2><p>Participants are given instructions to map letters A, B, C, D, E, F, G, H, I, and J, which have been initially randomly assigned without replacement, to one of the 10 digits (0 through 9). For example, because letter &ldquo;A&rdquo; maps onto digit &ldquo;3&rdquo; and letter &ldquo;B&rdquo; maps onto digit &ldquo;5&rdquo;, an operation &ldquo;A + B&rdquo; would correspond to &ldquo;3 + 5&rdquo;. If letter &ldquo;C&rdquo; would map onto digit &ldquo;8&rdquo;, then A + B = C.</p><br><h2>2. Objective / Goal</h2><p>The goal is to identify the mapping of the 10 letters to the 10 numbers in as few trials as possible within a fixed amount of time and limited number of trials. Participants must also get the correct answer as quickly as possible.</p><p>There is a specific process participants have to follow to map letters onto numbers. Participants are first asked to come up with addition or subtraction operation (e.g., &ldquo;A + B&rdquo;) and then given an answer in the letter form (e.g., &ldquo;A + B = C&rdquo;). Then participants propose a mapping for a letter (e.g., &ldquo;A = 3&rdquo;) and receive feedback (e.g., &ldquo;True, A = 3&rdquo;). Participants have to follow this process in proposing the mapping of all letters to all digits. To submit their final answer, participants have to indicate which digits each of the letters correspond to.</p><p>Participants are evaluated based on several criteria, such as the number of trials they used, letters identified per trial, and letters used per equation. There is a theoretical maximum score, and participants get the highest score by finding the correct mapping as fast as they can, with as few trials as possible.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/c56a651edbab57b147e65b73ad036ea92cc81fb9,tasks/summaries/Letters-to-numbers problems (cryptography)-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Guessing the correlation,"<h2>Guessing the correlation</h2><br><h2>1. Set-Up</h2><p>Participants receive a series of scatter plots which are a series of points plotted on a grid. In any round, all participants see plots with an identical correlation.</p><br><h2>2. Objective / Goal</h2><p>The goal is to estimate the correlation of the points on the grid. (For example, if all the dots are in a straight line pointing upwards, the correlation is 1; if the dots are completely scattered randomly with no pattern at all, the correlation is 0). There is a time limit to make an estimation.</p><p>Participants are evaluated on the accuracy of their judgment. They receive the highest score by guessing the exact correlation but they have to try to get as many points as possible by being as precise as they can. After participants sumbit their guess, they can see the true correlation and see whether they are right or wrong as well as how close their guess is to the true correlation.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/dd22d23dec2aee1c467f42d4d08ac8d544e9e10b,tasks/summaries/Guessing the correlation-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Abstract grid task,"<h2>Abstract grid task</h2><br><h2>1. Set-Up</h2><p>Participants are given a shared grid, in which some squares in the grid are colored in, and other squares in the grid are not colored in. The grid is interactive, and offers the opportunity to change the squares&#39; colors by either &ldquo;adding&rdquo; color where a square is not filled in, or &ldquo;substracting&rdquo; color where a square is already filled in (removing the color from the square).</p><p>Clicking a particular square on the grid &ldquo;toggles&rdquo; the color &mdash; shifting it from colored to non-colored, or vice versa.</p><br><h2>2. Objective / Goal</h2><p>The goal is to make the grid appear exactly symmetrical from left-to-right and top-to-bottom using the fewest number of clicks. (Each click represents one manipulation &mdash; either adding or subtracting color from the grid.)</p><p>Each problem has a known &ldquo;lowest&rdquo; number of clicks, which represents the best possible answer. However, participants are not given any feedback about whether their answer was the best. Finally, participants must complete the task within the time limit.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/a7f6d32c5ec2fe812b69f62a6edfc5d57b07d119,tasks/summaries/Abstract grid task-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Advertisement writing,"<h2>Advertisement writing</h2><br><h2>1. Set-Up</h2><p>Participants were given the description of a product from Kickstarter. For example, they could read about &ldquo;Soapstone: the Sustainable Travel Soap Dispenser,&rdquo; and learn about its features.</p><br><h2>2. Objective / Goal</h2><p>The goal was to write an online text advertisement of no more than 30 characters for the Kickstarter product. The advertisement had to be creative, informative, and get people to click. When working in teams, participants needed to submit a single collective writeup, produced within the time limit.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/09547baa9ee9ade429f15274d1258baa3ad25252,tasks/summaries/Advertisement writing-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Whac-A-Mole,"<h2>Whac-A-Mole</h2><br><h2>1. Set-Up</h2><p>Participants see a shared screen with a bunch of colored moving targets (circles) and an ability to click or &ldquo;hit&rdquo; the targets as they moved around. Each participant can control their own individual mouse, but everyone sees the same moving targets.</p><br><h2>2. Objective / Goal</h2><p>The targets are worth different numbers of points based on their color. Participants&#39; goal was to hit (e.g., click on) targets based on their point value, thereby maximizing their points. They have a limited amount of time to get as many points as possible.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/8b56ba8b5591973c83fc68741db3fe273568c739,tasks/summaries/Whac-A-Mole-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Putting food into categories,"<h2>Putting food into categories</h2><br><h2>1. Set-Up</h2><p>Participants were provided with a shared list containing several (e.g., a dozen) fruit and vegetable items. For example, you might have a list with the words, &ldquo;orange,&rdquo; &ldquo;grapes,&rdquo; &ldquo;peach,&rdquo; &ldquo;apple,&rdquo; etc. </p><p>Everyone in the team sees the same list, and the contents of the list stay the same for a given round.</p><br><h2>2. Objective / Goal</h2><p>The goal was to generate as many different ideas as possible for categories that could be used to divide the food items. </p><p>These ideas are purely abstract concepts meant to demonstrate creativity: e.g., &ldquo;how many ways can you think of to put these food items into different categories?&rdquo; For example, they could divide the fruit into citrus vs non-citrus, tropical vs non-tropical, seeds versus no seeds, or any number of possibly wild or imaginative ideas (things you can feed an elephant vs things you cannot feed an elephant).</p><p>Participants must come up with as many criteria for dividing the food items as they can within a limited amount of time. To submit, they simply type the ideas into the system. Those working together can see all ideas generated by everyone in the team so far.</p><p>Finally, credit is awarded for the total number of non-redundant ideas that participants came up with. That is, participants would only get credit once even if they submit the same idea multiple times, but it is OK if a different team also submitted the same idea.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/18f592c297a321002458953433b2e96117c99ae7,tasks/summaries/Putting food into categories-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Room assignment task,"<h2>Room assignment task</h2><br><h2>1. Set-Up</h2><p>Participants are given a set of people (students), rooms, and rules (constraining conditions).</p><br><h2>2. Objective / Goal</h2><p>The goal is to assign students to rooms within a fixed amount of time in order to maximize the students&#39; utility as much as possible while also respecting all of the constraining conditions (for example, one rule might say that certain people are not allowed to be in the same room). Students get a specified amount of utility from being assigned to a particular room, which translates to points in the game.</p><p>Participants will be shown the running total of how many points their current submission has earned, but they will not be notified if they have achieved the optimal arrangement. If participants&#39; submission violates some of the contraining conditions, they will receive a score penalty.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/3e61278b26c027d84e87f85b3e8305d33c47ed1c,tasks/summaries/Room assignment task-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Divergent Association Task,"<h2>Divergent Association Task</h2><br><h2>1. Set-Up</h2><p>Participants are given a task sheet with instructions, a blank space to write 10 words in, and a list of rules.</p><br><h2>2. Objective / Goal</h2><p>The goal is to come up with 10 nouns as different from each other as possible within a fixed amount of time. For example, words &ldquo;cat&rdquo; and &ldquo;dog&rdquo; are considered similar to each other because they are often used in the same context, while words &ldquo;cat&rdquo; and &ldquo;thimble&rdquo; are different because they are rarely used together.</p><p>Participants are evaluated on how semantically different the words are. The minimum score occurs when all the words are the same, while the theoretical maximum score occurs when words have the least possible relation to each other. Participants maximize their score by coming up with as many the most semantically distant words as possible.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/4a4bc97f42877152244f7903cd726027494ccfb5,tasks/summaries/Divergent Association Task-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Recall association,"<h2>Recall association</h2><br><h2>1. Set-Up</h2><p>Participants are given a list of several words to study. Example words on the list include &ldquo;spider,&rdquo; &ldquo;foot,&rdquo; &ldquo;pen,&rdquo; &ldquo;car,&rdquo; etc.</p><br><h2>2. Objective / Goal</h2><p>The goal is to recall as many words as possible from the studied list within a fixed amount of time. </p><p>Participants receive the maximum score for recalling all words correctly and the minimum for recalling none. Participants maximize their score by recalling as many words as they can.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/6cdc2247016405e6372b044ca8b9dcd9d91ed13f,tasks/summaries/Recall association-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Search for Oil Task,"<h2>Search for Oil Task</h2><br><h2>1. Set-Up</h2><p>Pariticipants view a shared 12x12 grid of points, creating a digital &ldquo;map&rdquo;. Each point represents a section of &ldquo;land&rdquo; in a theoretical oil field. A limited number of these points have been pre-determined by the makers of the game to contain &ldquo;oil,&rdquo; while others contain nothing. </p><p>Participants are also given some information about which points might be more likely (but not certain!) to contain the oil. For example, they are told that some parts of this grid represent land with the appropriate chemical composition, making it more probable that there will be oil there. (Other pieces of information that make oil more or less likely include information about the surface hardness, surface mantle thickness, and geological stratification of the area.)</p><p>After being shown the detailed information for a limited amount of time, participants have to remember as much information as they can and then decide where they want to &ldquo;drill&rdquo; completely from memory. During the main gameplay, participants see just the 12x12 map, where they are able to click on each point if they want to drill there.</p><p>As participants select which locations they want to drill, they are given feedback after each decision. For example, after participants pick a point on the 12x12 grid to drill oil, they will be told whether they were right or wrong about oil being there, and they will see the running total of their score.</p><br><h2>2. Objective / Goal</h2><p>The goal of the task is to decide which of the 144 sections of land is suitable for drilling oil, and to do so as accurately as possible before the game&#39;s time limit runs out. In other words, participants have to remember and account for all the information they were provided about where oil is most likely to be found, and then decide where they want to &ldquo;drill&rdquo; (by clicking on the point on the map).</p><p>Participants aim to get the highest possible score, and they earn points for every location with oil that they successfully find. They lose points if they select locations that do not have oil. Therefore, one would get the maximum score of this game by correctly finding every point with oil without making any mistakes.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/6d3cc0d689bfc7f7ae069f983a92debe79c5a8fc,tasks/summaries/Search for Oil Task-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
"Wolf, goat and cabbage transfer","<h2>Wolf, goat and cabbage transfer</h2><br><h2>1. Set-Up</h2><p>Participants are given a problem that reads as follows:</p><p>&ldquo;Once upon a time a farmer went to a market and purchased a wolf, a goat, and a cabbage. On his way home, the farmer came to the bank of a river and rented a boat. But crossing the river by boat, the farmer could carry only himself and a single one of his purchases: the wolf, the goat, or the cabbage.</p><p>If left unattended together, the wolf would eat the goat, or the goat would eat the cabbage.</p><p>The farmer&#39;s challenge was to carry himself and his purchases to the far bank of the river, leaving each purchase intact. How did he do it?&rdquo;</p><br><h2>2. Objective / Goal</h2><p>The goal is to achieve the fewest number of trips that get the wolf, goat, and cabbage from one river bank to another, and to solve this problem within the time limit.</p><p>There are a few different possible solutions that get to the lowest number. All of the solutions require the participants take the goat over first, because any other action will lead to something being eaten. Once the farmer comes back, though, there is a dilemma, because if he takes the wolf over, the wolf would eat the goat on the other side; if he takes the cabbage over, the goat would eat the cabbage on the other side.</p><p>The &ldquo;trick&rdquo; to this problem is to realize that the farmer can actually take the goat BACK on his return trip: that is, he takes either the wolf or cabbage with him on the second trip. Then, he takes the goat BACK to the ORIGINAL side. He then picks up the remaining one of the cabbage or wolf, and finally, he goes back with the goat. Realizing that you can actually bring things back and forth (in both directions), rather than just in one direction across the river, usually requires some out-of-the-box thinking.</p><p>Therefore, participants must satisfy the constraints of the problem while also thinking creatively. As a final piece of helpful context, this task is actually a well-known one that many people have built algorithms to solve.</p><p>To summarize, the solution to this task is:</p><ol><li>Take the goat to the other side</li><li>Return to original side (where the wolf and cabbage are)</li><li>Take either the wolf or cabbage to the other side</li><li>Return to the original side with the goat [THIS IS THE TRICK! Realizing this prevents either the wolf eating the goat or the goat eating the cabbage.]</li><li>Take the cabbage or wolf over to the other side</li><li>Return to the original side, where only the goat remains.</li><li>Take the goat over</li></ol>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/b9d60e8325c43f3284c5844b42d8fce986f71934,"tasks/summaries/Wolf, goat and cabbage transfer-writeup.md",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Husbands and wives transfer,"<h2>Husbands and wives transfer</h2><br><h2>1. Set-Up</h2><p>Participants are given a problem that reads as follows:</p><p>&ldquo;On the A-side of the river are wives (W1, W2, W3) and their husbands (H1, H2, H3). All of the men but none of the women can row. Get them across to the B-side of the river by means of a boat carrying only three at one time. No man will allow his wife to be in the presence of another man unless he is also there.&rdquo;</p><br><h2>2. Objective / Goal</h2><p>The goal is to achieve the fewest number of trips that get all six people to the B-side, and to solve this problem within the time limit.</p><p>There are several possible &ldquo;shortest&rdquo; solutions to this problem. In general, participants must realize that solving the problem requires people to row back and forth &mdash; that is, some of the people who go from the A-side to the B-side have to go BACK to the A-side &mdash; and then figure out the right combinations that meet the requirements (W1 cannot be in the presence of H2 or H3 unless H1 is also there, and so on).</p><p>Therefore, participants must satisfy the constraints of the problem while also thinking creatively. As a final piece of helpful context, this task is actually a well-known one that many people have built algorithms to solve.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/1c98f62f162c321565a1f3bcdff706ce38e2d134,tasks/summaries/Husbands and wives transfer-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Typing game,"<h2>Typing game</h2><br><h2>1. Set-Up</h2><p>Participants see an image of a document &mdash;  we can call this the &ldquo;Document to Copy.&rdquo; This document contains several passages of relatively complicated text.</p><p>The Document to Copy cannot be edited, copied, or pasted. Everyone working together sees the same document.</p><p>Participants also have a shared, editable document, where they are able to type.</p><br><h2>2. Objective / Goal</h2><p>The goal is to exactly reproduce the words from the Document to Copy in the editable document. The focus is on typing words correctly: participants earn points for every word they correctly type, and they lose points for skipping words or for making typos.</p><p>Participants have a limited amount of time to type as many words from the Document to Copy as they can.</p><p>If working in a group, everyone types into the same shared document, and therefore team members must also coordinate to avoid typing over each other or missing certain sections.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/4f9f17e96b89bb7f810c1f2f083e0829d6f8fd61,tasks/summaries/Typing game-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Recall images,"<h2>Recall images</h2><br><h2>1. Set-Up</h2><p>Participants receive a certain number of images to memorize on individual screens.</p><br><h2>2. Objective / Goal</h2><p>The goal is to memorize all target images within a fixed amount of time and to be able to identify them later from a lineup of old and new images.</p><p>For example, participants can be given 20 seconds to memorize six target faces and then asked to identify those target faces at a later time. At the later time period, they could be consecutively shown 15 sets of three faces (6 previously seen, and 39 new), and asked to pick out which faces were the images that they had previously seen before.</p><p>Participants are evaluated on the number of correctly recalled images. They earn the maximum score when they recall all images correctly (e.g., select the 6 original faces out of 45). This means they need to correctly identify all the images that they had seen before, and avoid mis-identifying a new image as something they had previously seen.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/eca5a325d6c0b2ad89042bd37775530b822d9710,tasks/summaries/Recall images-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Railroad Route Construction game,"<h2>Railroad Route Construction game</h2><br><h2>1. Set-Up</h2><p>Participants see a shared visual of a map, consisting of a grid in which each square is a place where players can place a &ldquo;railroad track&rdquo; piece. Some parts of the map are blocked off &mdash; for example, because there is a tree or other obstacle in that location &mdash; and therefore railroad tracks cannot be placed there. There is a &ldquo;start&rdquo; and &ldquo;finish&rdquo; marked on the map.</p><p>Participants also get a collection of several different types of railroad tracks. Some track pieces are bent like an elbow, and there are versions that bend downwards, bend upwards, and so on. Other pieces are straight. Participants are given enough pieces to be able to build a railroad that connects the start and finish.</p><br><h2>2. Objective / Goal</h2><p>The goal of the game is to build a railroad using the given puzzle pieces to connect the starting point to the finish point. Participants have to avoid the obstacles (places where you cannot place railroad tracks) &mdash; therefore, they need to use a mixture of bent tracks and straight tracks to navigate the map. Any path that runs smoothly from the start to the finish counts as a success, so there is no specific final path or &ldquo;ideal&rdquo; route.</p><p>Participants must finish the game before the time runs out, but are able to visually see their progress on the screen throughout the game (since everyone is clicking, dragging, and interacting with it directly). Participants are evaluated on whether or not they are able to connect the start to the finish: if they do not make it in time, they receive no credit. There is no partial credit for building only part of the railroad.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/6aed3040229d59b35254c80656fee1588b54bb9f,tasks/summaries/Railroad Route Construction game-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Railroad Route Construction game (Impossible Version),"<h2>Railroad Route Construction game (Impossible Version)</h2><br><h2>1. Set-Up</h2><p>Participants see a shared visual of a map, consisting of a grid in which each square is a place where players can place a &ldquo;railroad track&rdquo; piece. Some parts of the map are blocked off &mdash; for example, because there is a tree or other obstacle in that location &mdash; and therefore railroad tracks cannot be placed there. There is a &ldquo;start&rdquo; and &ldquo;finish&rdquo; marked on the map.</p><p>Participants also get a collection of several different types of railroad tracks. Some track pieces are bent like an elbow, and there are versions that bend downwards, bend upwards, and so on. Other pieces are straight. </p><p>Importantly, participants do NOT have enough pieces to successfully build a railroad that connects from the start to the finish. A piece is missing, which makes this game impossible to complete. However, participants are not told that a piece is missing.</p><br><h2>2. Objective / Goal</h2><p>The goal of the game is to build a railroad using the given puzzle pieces to connect the starting point to the finish point. Participants have to avoid the obstacles (places where you cannot place railroad tracks) &mdash; therefore, they need to use a mixture of bent tracks and straight tracks to navigate the map. Any path that runs smoothly from the start to the finish counts as a success, but since there is a piece missing, there is actually no solution to this puzzle.</p><p>Participants aim to finish the game before the time runs out, and are able to visually see their progress on the screen throughout the game (since everyone is clicking, dragging, and interacting with it directly). Participants are evaluated on whether or not they are able to connect the start to the finish: if they do not make it in time, they receive no credit. </p><p>However, since there is no partial credit and the game is missing a critical piece, all participants lose. There is no way to win.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/3faf39f9336620c7f8e78e2da2eb65f383646a91,tasks/summaries/Railroad Route Construction game (Impossible Version)-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Estimating geological metrics,"<h2>Estimating geological metrics</h2><br><h2>1. Set-Up</h2><p>Participants are given a series of questions on estimating geological metrics. For example, participants can be asked to estimate the number of miles from New York to Los Angeles or the number of U.S. states that border the Gulf of Mexico.</p><br><h2>2. Objective / Goal</h2><p>The goal is to answer a series of questions within a fixed amount of time as close to the correct answer as possible without looking up the solutions online.</p><p>Participants are evaluated based on the percent difference of their estimation from the correct answer. Participants receive the maximum score if their estimation is exactly like the correct answer and the percent difference between them is 0. Participants maximize their score by submitting an estimation that is as close to the right answer as possible. For example, because the distance between New York and Los Angeles is 2446.3 miles, participants get the maximum score if their estimation is 2446.3, while an estimation of 2400 miles receives a higher score than an estimation of 2000 miles.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/8d50ef06e8b5f90d384642bf3298043759673c86,tasks/summaries/Estimating geological metrics-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
The Fish game,"<h2>The Fish game</h2><br><h2>1. Set-Up</h2><p>The participants see a shared virtual canvas with many different cursors moving around. Each participant controls their own cursor (which is denoted by a unique color and the word &ldquo;YOU&rdquo;). Participants are able to use the controls to move their cursor and &ldquo;walk&rdquo; around the virtual space.</p><p>An underlying system sets a &ldquo;point value&rdquo; for each location in the space. That is, walking to specific locations in the virtual space will earn the participant more points. Participants will be able to see how many points their current location gives them, and they will also see the running total of how many points they earned so far. However, participants do not know where the high-point-earning locations are, so they must wander around the virtual room. Participants lose all their points if they touch the wall.</p><br><h2>2. Objective / Goal</h2><p>The goal is to maximize points in the game by discovering and moving your cursor to the highest point-earning locations in the virtual space. Participants try to get as many points as possible before the time limit expires.</p><p>This essentially involves a bit of trial and error, since participants only see how many points their current location is worth. There is also an element of understanding risks and tradeoffs: participants have to decide whether to explore other locations in the room (at the risk of only finding lower-point areas) or just stay put and earn however many points their current location is worth (at the risk of not finding the highest point-earning location). When playing with others, participants may get a sense of where to go by observing where other people in the room are heading.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/5dfd38851f62758d90b3fd8c56d36320f41e128b,tasks/summaries/The Fish game-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Estimating social quantity,"<h2>Estimating social quantity</h2><br><h2>1. Set-Up</h2><p>Participants are given a series of questions on estimating quantities of real-life social phenomena. For example, participants can be asked to estimate the median age in the U.S. in 2009.</p><br><h2>2. Objective / Goal</h2><p>The goal is to answer a series of questions within a fixed amount of time as close to the correct answer as possible without looking up the solutions.</p><p>Participants are evaluated based on the percent difference of their estimation from the correct answer. Participants receive the maximum score if their estimation is exactly like the correct answer and the percent difference between them is 0. Participants maximize their score by submitting an estimation that is as close to the right answer as possible. For example, because the median age in the U.S. in 2009 is 36.7, participants get the maximum score if their estimation is 36.7, while an estimation of 35 years receives a higher score than an estimation of 30 years.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/56341d997c68a41ed859ce2c4e7288a1488379a9,tasks/summaries/Estimating social quantity-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Visual Oddball Target,"<h2>Visual Oddball Target</h2><br><h2>1. Set-Up</h2><p>Participants see several groupings of visual stimuli. For example, they might get a series of Gabor patches. These are circular-shaped patterns with black and white bars oriented in the same direction; the patterns are often used in psychological research because they can create an optical illusion, making for a challenging visual perception task. The participants might get several groups of 6 such patches.</p><p>Sometimes, one of the visual items might be an &ldquo;oddball&rdquo; (it looks different than the rest). In this case, if participants see 6 patches at a time, the oddball would be a Gabor patch with different level of contrast (it&#39;s darker) or have a different pattern than the other 5.</p><br><h2>2. Objective / Goal</h2><p>The goal is to visually identify when there is an oddball versus when there is not.</p><p>The task is focused on visual perception: participants see a grouping, and then need to decide whether one patch looks different than all the others.  They submit their decision by pressing a button using their mouse or a keyboard within a fixed amount of time.</p><p>For example, if participants see a group of 6 Gabor patches, they would press a mouse or a keyboard button when there is an oddball and press nothing when all patches in the group look the same.</p><p>There are only two possible outcomes of task performance. Participants can either correctly identify the oddball or not.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/fa03f0b6cb896c63eb2db85546248d16d324a9a7,tasks/summaries/Visual Oddball Target-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Checkers,"<h2>Checkers</h2><br><h2>1. Set-Up</h2><p>Participants are given an online checkers board. This is an 8x8 board, in which the squares are colored dark and white in alternating colors. Participants start out with 12 round, flat pieces on each side; these are placed on the dark squares on their side of the board.</p><p>The rules of checkers are as follows: </p><ol><li>The two sides take turns playing. One side completes a move, and then the other side plays.</li><li>You can only move a piece diagonally across the board (the game uses only the dark squares). </li><li>A piece can only move diagonally into a square where there are no existing pieces.</li><li>Pieces can only move forward (the only exception is rule #6).</li><li>You can take (or &ldquo;capture&rdquo;) your opponent&#39;s pieces by moving diagonally, jumping over the piece being captured, and landing on an unoccupied square. Multiple enemy pieces can be captured in a single turn by jumping forward several times in a row.</li><li>If a piece reaches the other side, it becomes a &ldquo;king&rdquo; and has an additional piece stacked on top of it. Kings have the additional ability to jump backwards.</li><li>The game ends when one party loses all of its pieces (everything is captured).</li></ol><p>Participants control one side of the board, and a computer controls the other side. When playing as a team, participants discuss their strategy and make their next move together.</p><br><h2>2. Objective / Goal</h2><p>The goal is to win &mdash; to beat the computer (the opponent) in checkers. This involves capturing all of the computer&#39;s checkers pieces by following the rules of the game. Participants need to win the game within a fixed time limit, or else they automatically lose.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/bf0d01be1a755fdf6d46fc2ab1fcf5077d11e7bf,tasks/summaries/Checkers-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Reproducing arts,"<h2>Reproducing arts</h2><br><h2>1. Set-Up</h2><p>Participants are given a shared online spreadsheet tool that can be edited, as well as a shared, static copy of a spreadsheet with each cell colored in a different way (the &ldquo;target&rdquo; spreadsheet).</p><br><h2>2. Objective / Goal</h2><p>The goal is to reproduce the &ldquo;target&rdquo; spreadsheet in the editable spreadsheet. That is, within a fixed amount of time, participants have to make the shared, editable spreadsheet look like an exact copy of the pattern of colors in the &ldquo;target&rdquo; spreadsheet.</p><p>Participants receive points for coloring a cell correctly and don&#39;t receive points for coloring a cell incorrectlly. They get the maximum score on the task if they reproduce the exact copy of the &ldquo;target&rdquo; spreadsheet and they try to get the highest score by correctly coloring as many cells as they can.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/7ceec71a09f6765997f516124169b1453d6cfded,tasks/summaries/Reproducing arts-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Computer maze,"<h2>Computer maze</h2><br><h2>1. Set-Up</h2><p>Participants are given a computer monitor with a virtual maze environment and either a keyboard or a joystick. The maze consists of a long winding corridor with many hallways branching off. The hallways are populated by complex unfamiliar objects called &ldquo;greebles,&rdquo; which are difficult to distinguish from one another. A maze contains a certain number of pairs of identical greebles and a certain number of distractor greebles.</p><br><h2>2. Objective / Goal</h2><p>The goal is to navigate through the entire maze and tag as many identical greeble pairs as possible within a fixed amount of time. </p><p>Participants are evaluated based on maze navigating and greebles tagging. Participants receive points for navigating through the entire maze and don&#39;t receive, but also don&#39;t lose, any points for not going through the entire maze. Participants get points for tagging identical greeble pairs and lose points for tagging distracing greebles or mixing greebles from other pairs. The maximum score occurs when participants both navigate through the entire maze and tag all greeble pairs correctly.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/2bb706878d0cfc9e5e95fd5845516bc736d9f5ec,tasks/summaries/Computer maze-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Categorization problem,"<h2>Categorization problem</h2><br><h2>1. Set-Up</h2><p>Participants receive 16 cards with pictures of two objects on each one (32 total objects). Half of the objects (16) on the cards are related to each other, and can be grouped into four categories. For example, the categories could be &ldquo;vehicles,&rdquo; &ldquo;animals,&rdquo; &ldquo;furniture,&rdquo; and &ldquo;shapes.&rdquo; There are four objects per category. The remaining 16 objects are distractors. There is one category object and one distractor on each card.</p><p>Participants see all the objects depicted on the cards in a random order. They do not know which objects on the cards belong to the four categories and which are distractors, which makes this task difficult. For example, &ldquo;furniture&rdquo; may be one of the categories, and participants&#39; cards may include a picture of an armchair, bar stool, office chair and table. However, there may also be distractors, such as an alarm clock and wall clock, which could &ldquo;throw off&rdquo; someone attempting to figure out the categories &mdash; they may think that the alarm clock, wall clock, and office chair are all related to a category of going to work, and therefore miss the true category of &ldquo;furniture.&rdquo;</p><br><h2>2. Objective / Goal</h2><p>The goal is to identify the 16 cards belonging to categories, and correctly form four categories with them, within a fixed amount of time. </p><p>The task is designed in such a way that it is impossible to form four categories if participants start using distractor objects; there is only one objective way of forming categories so that all cards are used. Participants either complete this task by forming the four objectively correct categories, or they fail.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/7dee968b347ce81be64623baf9d628cdb626b0bf,tasks/summaries/Categorization problem-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Recall stories,"<h2>Recall stories</h2><br><h2>1. Set-Up</h2><p>Participants read one or more stories that are each approximately 4 pages in length. After reading each story, they advance to a different page (where they are no longer able to reference the story), and they see multiple (e.g., 12) reading comprehension questions accompanying the story. Every question has an objectively correct answer based on the text.</p><br><h2>2. Objective / Goal</h2><p>The goal is to correctly answer knowledge questions about the stories within a fixed amount of time. </p><p>Participants are evaluated on the number of correctly answered questions and they earn the maximum score when they answer all questions correctly. Since they cannot reference the stories, they must answer the questions based on their memory of what they read.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/1b76fa649c2d98846c3f1777ac2c04e76a79f74f,tasks/summaries/Recall stories-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Hidden figures in a picture (Searching Task),"<h2>Hidden figures in a picture (Searching Task)</h2><br><h2>1. Set-Up</h2><p>Participants see an incredibly busy and complex image that contains many hidden animals. Imagine a picture that looks like &ldquo;Where&#39;s Waldo&rdquo; &mdash; with lots of people and animals in one detailed, colorful image. Participants are then given a list of animals that they are supposed to find in the picture: for example, lion, penguin, dolphin, elephant.</p><p>If working together, participants in a team see the same picture and have the same list of animals to find.</p><br><h2>2. Objective / Goal</h2><p>The goal of the task is to successfully identify the locations (in the image) of as many animals as possible from the list. Participants must find the most animals they can within a limited period of time.</p><p>Participants submit their response by pointing and clicking on the correct location of the animal, and they get points for every animal that they are able to find. Thus, they would get the highest score if they find all animals on the list. If participants are working together, only one person on the team needs to click on the animal in order for it to be counted, which means that having members of a team search separately is advantageous.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/807b07808432adef059cc23e2261979c4ac6fb34,tasks/summaries/Hidden figures in a picture (Searching Task)-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Hidden figures in a picture (Recall Task),"<h2>Hidden figures in a picture (Recall Task)</h2><br><h2>1. Set-Up</h2><p>Participants see an incredibly busy and complex image that contains many hidden animals. Imagine a picture that looks like &ldquo;Where&#39;s Waldo&rdquo; &mdash; with lots of people and animals in one detailed, colorful image. Participants are then given a list of animals that they are supposed to find in the picture: for example, lion, penguin, dolphin, elephant.</p><p>If working together, participants in a team see the same picture and have the same list of animals to find.</p><p>Participants then engage in a task in which everyone working together attempts to find as many animals from the list as they can in the provided image. For example, if &ldquo;elephant&rdquo; is on the list, they need to look for the elephant in the picture, and then click on it.</p><p>After a delay, participants are taken to a page where they can type and submit words.</p><br><h2>2. Objective / Goal</h2><p>The goal of the task is to be able to recall as many animals as they can from the original list. Participants type and submit the words using the webpage. They have a limited amount of time to submit all the words that they can remember.</p><p>If working together, only one participant on a team needs to remember the word in order for everyone to receive credit.</p><p>Participants are scored based on the number of animals from the original list that they are able to recall. For example, if there were 10 animals on the list, they would get the maximum score if they recalled all 10 animals.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/9afb1a0a9ec62d1f6a76383112b86c3084c1fa5e,tasks/summaries/Hidden figures in a picture (Recall Task)-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Word construction from a subset of letters,"<h2>Word construction from a subset of letters</h2><br><h2>1. Set-Up</h2><p>Participants are presented with nine letters. For example: A, F, H, B, E, J, N, K, D.</p><br><h2>2. Objective / Goal</h2><p>The goal is to produce as many valid four-letter English words as possible from a given set of nine letters within a fixed amount of time. For example, out of the set of letters above, words such as &ldquo;bean,&rdquo; &ldquo;head,&rdquo;, &ldquo;khan,&rdquo; &ldquo;dean&rdquo; and many others can be formed. Although there is a theoretical maximum score if participants exhaust all the possible combinations of letters to form four-letter words, the goal is simply to generate as many words as participants can within the time limit.</p><p>Participants submit their words through an online system. Words that are not valid in English or that are longer than four letters will be rejected by the system. Those working in teams can brainstorm in any way they wish; the total number of non-repeated words submitted by the team will be counted.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/f60d4b216f31395c8626cb60ce08256f8cdf18aa,tasks/summaries/Word construction from a subset of letters-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Trivia Multiple Choice Quiz,"<h2>Trivia Multiple Choice Quiz</h2><br><h2>1. Set-Up</h2><p>Participants receive a series of multiple choice trivia questions. For example, participants can be asked about the average weight of an elephant and be given options of 9,000 lbs, 5,000 lbs, and 15,000 lbs.</p><br><h2>2. Objective / Goal</h2><p>The goal is to correctly answer as many qestions as possible from a multiple choice trivia quiz within a fixed amount of time and without looking up the solutions online. Participants don&#39;t get any points if they answer a question incorrectly and they get points for choosing the correct answer. Participants maximize their score by answering as many questions correctly as they can and get the maximum score if they answer all questions correctly.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/e6c1dddd14b66f8c41768ee84cfc6b8c37976755,tasks/summaries/Trivia Multiple Choice Quiz-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Logic Problem,"<h2>Logic Problem</h2><br><h2>1. Set-Up</h2><p>Participants receive a logic problem, which is a story problem with a correct answer that must be deduced via logic. This problem is shared among everyone who is working together.</p><p>Here is an example question: There are five couples who vacationed at five different ski resorts. Based on the clues, figure out which couple vacationed where. Participants would get a set of clues to solve this problem, such as &ldquo;Neither Tammy nor Sue vacationed in Innsbruck,&rdquo; &ldquo;Both Rita and Mrs. Owens returned from their vacations with broken wrists,&rdquo; &ldquo;no one at Tahoe was injured that weekend,&rdquo; and so on. Participants are provided with sufficient clues to be able to solve the question.</p><br><h2>2. Objective / Goal</h2><p>The goal is to use the clues provided to achieve the correct answer in the logic problem. Participants must solve the problem and submit their answer within a limited amount of time.</p><p>In the above example, the participants would use logic to reason that neither Rita nor Mrs. Owens went to Tahoe, since no one at Tahoe was injured. They would then use other clues to match the correct people to the correct vacation locations.</p><p>Participants are scored based on the number of correct matches in the final solution that they get. In this case, since there are five couples and and five ski resorts, participants would get credit for every pair that they are able to match, and they would achieve the maximum score if they get all five pairs correct.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/951fa3e663e027582f5d7b0df8956c9d33ab5690,tasks/summaries/Logic Problem-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Writing story,"<h2>Writing story</h2><br><h2>1. Set-Up</h2><p>Participants receive a writing prompt. Examples include, &ldquo;Write a story about this inkblot,&rdquo; or &ldquo;Describe this mountain scene.&rdquo; Everyone in the same team gets the same writing prompt.</p><br><h2>2. Objective / Goal</h2><p>The goal is to write a response to the prompt. If working in teams, participants discuss and collectively produce the same story. The work must be submitted online within a fixed time period.</p><p>Since this is an open-ended writing task, there are no right or wrong answers, and anything that addresses the writing prompt is a valid answer. Participants are evaluated based on the quality of their responses (for example, the length, writing quality, and level of creativity).</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/c6f4220a23107878cbf0adb35373ce55450cf934,tasks/summaries/Writing story-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Target Search,"<h2>Target Search</h2><br><h2>1. Set-Up</h2><p>Participants view a labeled spreadsheet with 100 squares on it. The columns are given letters and the rows are given numbers (so, each blank cell has a letter-number coordinate, like A5, E10, etc.).</p><p>While these cells on the spreadsheet appear blank to the participant, each one is actually connected behind the scenes to a specific value that only the experimenter can see. On the experimenter&#39;s side, there is essentially an invisible &ldquo;target&rdquo; &mdash; the cells are grouped into concentric circles. This &ldquo;target&rdquo; shape determines the point value of each cell. Cells located in the middle of the target are worth more points than cells near the edges of the target. The closer to the center of the target a cell is, the more points it is worth. If a cell is outside of the target entirely, it is worth 0 points.</p><p>For example, imagine that E10 is the center of the target. Then E10 is worth the most points. A cell that is next to the target (E11) is worth the second-most number of points, whereas a cell that is far away from the target (e.g., A5) would be worth fewer points (or zero, if it is outside the target).</p><p>Of course, since the participants do not see the target, they have no idea how many points each cell is worth.</p><br><h2>2. Objective / Goal</h2><p>The goal is to get the most points. In other words, participants need to find the coordinates of as many high-value cells as they can within a fixed amount of time and under a limited number of allowed guesses.</p><p>For each guess, participants submit the coordinate of a blank cell (e.g., A5) and then get feedback about how many points they received. Based on feedback, they would try to figure out where the the experimenter&#39;s underlying &ldquo;target&rdquo; is and look for the high-scoring cells. If they are working in teams, participants work together to determine their next guess.</p><p>After a few guesses, participants can often &ldquo;decipher&rdquo; the logic of the sheet and will then be able to name the cells corresponding to the largest values. This is why this game is called &ldquo;target search&rdquo; &mdash; participants are using each guess to learn about where the target is, and to search for the highest-value cells.</p><p>Participants are evaluated based on the values of the cells they name. The score is maximized by naming as many cells with as large values as possible. Theoretically, the best possible score would be to find the center of the target on your first try and then only name the highest-value cells, but this is not likely to happen; most participants will experience some trial and error.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/9ce3cc6fb17d9999491f24e92e9b833e44e3fc4a,tasks/summaries/Target Search-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Wason's Selection Task,"<h2>Wason&#39;s Selection Task</h2><br><h2>1. Set-Up</h2><p>Participants are given a conditional sentence in the form of, &ldquo;If X, then Y.&rdquo; They also see four cards, which have either a letter or a number on the front. The cards are double-sided; those with a letter on the front have a number on the back, and vice versa.</p><p>As an example, imagine that the conditional sentence says the following: &ldquo;If there is a D on one side of any card, then there is a 3 on its other side.&rdquo;</p><p>Then, imagine that the four cards are:</p><ol><li>D (front), 3 (back)</li><li>3 (front), K (back)</li><li>B (front), 5 (back)</li><li>7 (front), D (back)</li></ol><br><h2>2. Objective / Goal</h2><p>The goal is to identify which cards, if turned over, would allow the participant to determine if the conditional sentence is true or false. Participants make the selection by clicking on the appopriate cards on the interface.</p><p>Consider the example above: &ldquo;If there is a D on one side of any card, then there is a 3 on its other side.&rdquo;</p><p>This means that if there is a card with D on one side, and something other than 3 on the other side, it would make the sentence false. Thus, the answer for each card is as follows:</p><ol><li>Card #1: We should select this card; if there is something other than 3 on the back, then the statement would be false.</li><li>Card #2: We should NOT select this card; whether the other side is D or not does not affect the truth of this statement. If it is D, then the statement is true; if it is not D, it is simply neutral evidence and does not disprove the statement.</li><li>Card #3: We should NOT select this card; the statement does not say anything about cards with letters other than D.</li><li>Card #4: We should select this card; if there is a D on the back, then the statement would be false (since D would be paired with a number other than 3).</li></ol><p>Selecting Card #1 is an easy decision: since it has a D on the front, it is easy to see that we should check for a 3 on the other side. However, some of the other choices are more difficult and require skillfully applying logic: for example, participants may not notice that they need to check Card #4 to make sure there is not a D on the other side. Participants may also mistakenly choose cards #2 or #3.</p><p>For a given sentence, there is a single correct solution (in the example above, choosing both #1 and #4). If participants correctly select exactly the right cards, then they solve the task correctly. If they do not select enough cards (e.g., picking #1 without picking #4) or if they select too many cards (e.g., picking #1, #2, and #4), then they fail the task.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/4cc6b7fdc8d7a4e89498919cce7f441cbff6c5f5,tasks/summaries/Wason's Selection Task-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Ravens Matrices,"<h2>Ravens Matrices</h2><br><h2>1. Set-Up</h2><p>Participants are presented with a pattern, which looks like a matrix or grid with a white background. There is a missing piece to the pattern.</p><p>Here is an example to help you imagine what the pattern might look like. Participants could see a grid with four spaces. In the first space they see a square, divided into four pieces, with one piece colored in. Then, in the second space, there is a square with two of four pieces colored in. In the third space, there is a sqaure with three of four pieces colored in. After the first three steps in the pattern, there would be a blank space on the grid.</p><p>Participants would then see a few multiple-choice options for what could fill the blank space. For example, they could choose between a square with one, two, three, or four pieces filled in.</p><p>All participants working together see the same pattern.</p><br><h2>2. Objective / Goal</h2><p>The goal is to complete the pattern by identifying what the missing piece should be. </p><p>In the example above, the correct answer is that the fourth space should have a square with four pieces colored in. (That is, successful participants would notice that the first square had one piece colored in; the second had two colored in; the third had three colored in; so, naturally, the fourth should have four colored in.)</p><p>The problem is multiple-choice, so participants will choose just one correct answer from a variety of options. There is always exactly one correct answer in the multiple-choice problem. Participants must make their selection within the time limit.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/05bef5a0893b58123cbc2699220c6dcdd17a6f7d,tasks/summaries/Ravens Matrices-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Find the maximum,"<h2>Find the maximum</h2><br><h2>1. Set-Up</h2><p>Participants see an empty text box where they can enter numbers.</p><p>Behind the scenes, there is a hidden function. This hidden function has a maximum value &mdash; for example, the function y = -x<sup>2</sup> reaches its maximum when x = 0. Participants know nothing about the hidden function; they only see the text box.</p><p>When participants enter numbers into the text box, the system will give them feedback about the value of the function at that point. For example, suppose that the hidden function is y = -x<sup>2</sup> and the participant enters 2. Then the system will tell them that the value is -4, since this is the value of -x<sup>2.</sup> If the participant enters -5, the system will tell them that the value is -25.</p><p>As they make guesses, participants see a log, which shows their guesses so far, the feedback they previously received, and how many guesses they have remaining.</p><br><h2>2. Objective / Goal</h2><p>The goal is to correctly guess the maximum value of the hidden function after a limited number of guesses (for which there is feedback after each guess).</p><p>Every problem has an objectively correct answer &mdash; the mathematical maximum of that function. However, participants are not told that they have found the correct answer even when they submit it as their guess. For example, if the hidden function is y = -x<sup>2,</sup> the correct answer is 0. A participant who submits 0 will simply be told that the value of the function at that point is also 0; they will not be told that this is the true maximum. Instead, the participant will just get their fixed number of tries, after which they are required to submit their final guess.</p><p>Participants are scored based on how close their final guess is to the true maximum. If the answer is 0, then the participant gets the highest possible number of points if they guess 0; a participant who guesses 2 will get a higher score than someone whose final guess is 10. Participants aim to get as close as possible to the correct answer.</p><p>Finally, if participants are working together, each one gets a limited number of guesses, and then they decide their final guess as a team.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/c205b98896b4deadb50c076b7bce1de8ff4fffdf,tasks/summaries/Find the maximum-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Desert survival,"<h2>Desert survival</h2><br><h2>1. Set-Up</h2><p>Participants view information describing a survival scenario in which a plane crashes in the desert. The survivors are able to salvage a list of 16 items (e.g., water, machete, compass, cosmetic mirror) from the wreckage. Everyone sees the same list of items.</p><br><h2>2. Objective / Goal</h2><p>The goal is to rank all 16 items in the order of most important to least important for survival. For example, if water is the most important for survival, then it would receive the rank of 1. If the cosmetic mirror is the least important for survival, then it gets the rank of 16.</p><p>Participants&#39; rankings are evaluated based on how close their rankings are to those created by a panel of survival experts. That is, the expert ranking is the &ldquo;true&rdquo; answer, and the closer a participant is to the true answer, the more points they earn. The highest possible score is achieved when participants rank all 16 items in the exact same order as the experts did.</p><p>If working in a team, participants are able to discuss the scenario with each other and come up with a single set of rankings as a team.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/12fe1bf10e0d96710f3a47d95bcbde9069db261e,tasks/summaries/Desert survival-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
The N light bulbs game,"<h2>The N light bulbs game</h2><br><h2>1. Set-Up</h2><p>Participants see 10 light bulbs.</p><p>Some of the light bulbs can be turned &ldquo;on&rdquo; or &ldquo;off&rdquo; by clicking on them. Other light bulbs are stuck &mdash; they are either on or off, and they cannot be changed. The light bulbs that are stuck are marked with a big &ldquo;X.&rdquo;</p><p>Different patterns of light bulbs are worth different numbers of points. For example, maybe an alternating pattern &mdash; on, off, on, off, etc. &mdash; has the highest points for this round of the game. However, participants do not know that this is the best pattern.</p><br><h2>2. Objective / Goal</h2><p>The goal is to get the most points by setting the lightbulbs to a pattern that maximizes the point value. </p><p>This means participants have to switch the light bulbs (that are not stuck) on and off to try to figure out which configurations have the highest payoff. For each guess, participants only get to change one light bulb (turn it &ldquo;on&rdquo; or &ldquo;off&rdquo;) at a time. There are a limited number of guesses. If working in teams, everyone collectively determines the next guess.</p><p>The computer will give feedback and tell the participant how many points they earned after each guess. While there is a theoretical &ldquo;best&rdquo; configuration,  participants will not be told if they have achieved it; they only know how many points the guess is worth. It&#39;s possible, for example, that they make a guess that gets to the optimal point value, but then make another guess that performs worse. Participants also have the option to end the round early if they are happy with their guess.</p><p>A final useful piece of information is that the lightbulbs can be thought of as binary variables (a 0 or 1), which would then allow this game to be played by an algorithm.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/0c7b29bdcfbcda80acef4cd5be03e9febf31aca3,tasks/summaries/The N light bulbs game-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Reading the mind in the eyes,"<h2>Reading the mind in the eyes</h2><br><h2>1. Set-Up</h2><p>Participants were given 36 pairs of eyes. Each pair is a photo of a person, cropped so that only the eyes are visible.</p><p>Each pair of eyes is intended to convey some sort of emotion &mdash; some of them are squinting with suspicion or wide-eyed with fear; some of them have their eyebrows raised in surprise; others have crinkles at the corners to suggest a smile.</p><p>Below the picture of the eyes, participants see four words describing different emotions: for example, &ldquo;playful,&rdquo; &ldquo;sad,&rdquo; &ldquo;irritated,&rdquo; and &ldquo;comforted.&rdquo;</p><br><h2>2. Objective / Goal</h2><p>The goal is to correctly label the eyes with an associated emotion by selecting the right one out of the four words.</p><p>Each pair of eyes has an objectively correct label out of the four given. Therefore, participants&#39; goal is to answer all questions correctly. They achieve the highest possible score if they label every pair of eyes with the right emotion. Participants have a limited amount of time to finish the test.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/e8bb671b296c889abdd5a627fea271944d602605,tasks/summaries/Reading the mind in the eyes-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Iterative lemonade stand task,"<h2>Iterative lemonade stand task</h2><br><h2>1. Set-Up</h2><p>Participants are given an an interactive online interface that represents managing a lemonade cart. The program allows users to tweak five variables: (1) price, (2) lemon content, (3) sugar content, (4) lemonade color, and (5) location of lemonade cart. There are limited options for lemonade color and cart location that are predefined within the task. For example, the lemonade can only be either yellow or orange, and a cart can either stand in the park or near the supermarket. Price can be any number the participant decides to use, while lemon and sugar content can be any value between 0 and 100 percent.</p><br><h2>2. Objective / Goal</h2><p>The goal is to maximize the cart&#39;s profit by adjusting the five given variables within a fixed amount of time. For example, participants can decide to sell their orange lemonade in the park with 20% lemon content and 5% sugar content for $3 a glass. There is a formula in the program that quantifies the cart&#39;s profit and shows participants instant feedback. Participants will not be told that they have reached the maximum possible profit; rather, they simply see feedback about the current profit and are able to adjust as many times as they want before they submit.</p><p>Participants are evaluated based on their profit. The more profit their cart makes after they tweak the variables, the better their performance is on the task.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/61f92dbd5e19bf4eb4b08972a22eb0e8f5b6ec06,tasks/summaries/Iterative lemonade stand task-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Random dot motion,"<h2>Random dot motion</h2><br><h2>1. Set-Up</h2><p>Participants see an image with many moving dots on the screen. Some of the dots are moving consistently in the same direction (&ldquo;correlated dots&rdquo;); other dots are simply bouncing around in random directions (&ldquo;random dots&rdquo;).</p><p>The percentage of dots moving in the same direction varies, which makes the task easier or harder. For example, if 50% of of the dots are correlated dots, then it is easy to observe the direction that the correlated dots are &ldquo;flowing&rdquo; in; if only 5% of the dots are correlated, than the picture looks mostly just like dots bouncing randomly, and it is harder to discern the direction that the correlated dots are moving in.</p><br><h2>2. Objective / Goal</h2><p>The goal is to correctly determine the direction that the correlated dots are moving in. </p><p>Participants submit their answer by using their mouse to place an arrow that points in the main direction of motion. They must submit their answer in a limited amount of time.</p><p>There is an objectively correct answer, since the system is designed for the correlated dots to be moving in a specific direction. Participants are evaluated based on how close they are to the objectively correct direction. Their score is calculated based on the angle that their direction forms with the true direction; if they get the direction exactly right, then the angle is 0 degrees, so they would get the highest possible score. If they are off by a small amount (e.g., the angle is 10 degrees), they would get more points than if the participants are off by a significant amount (e.g., the angle is 90 degrees).</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/b1920249c70bac8369eb82fa388beef9f1c8a28d,tasks/summaries/Random dot motion-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Crisis mapping,"<h2>Crisis mapping</h2><br><h2>1. Set-Up</h2><p>Participants are given a &ldquo;crisis mapping&rdquo; tool on a computer. They view a collection of pre-processed 1567 tweets about Typhoon Pablo in the Philippines, which were posted on December 4-5, 2012, and they receive detailed instructions on how to navigate the crisis mapping interface.</p><p>Some of the tweets contain information relevant to the typhoon, such as evacuation centers, damaged infrastructure, or number of deaths, while other tweets are irrelevant to the disaster.</p><br><h2>2. Objective / Goal</h2><p>The goal is to select relevant tweets and geo-locate, time-stamp, and categorize damage/flooding photos and videos in them, creating a precise and accurate crisis map for Typhoon Pablo within a fixed amount of time.</p><p>Experimenters pre-define a &ldquo;gold standard&rdquo; map with 49 distinct events in different regions. Participants only get credit based on how close their map is to the &ldquo;gold&rdquo; map. Therefore, their goal is to identify as many relevant events as possible without including irrelevant events, and the highest possible score is achieved when they identify precisely the same events as those in the &ldquo;gold standard.&rdquo;</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/c4765b7f194a81c47d49c052ccec1edc281231a1,tasks/summaries/Crisis mapping-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Game of Clue - Terrorist Attack,"<h2>Game of Clue - Terrorist Attack</h2><br><h2>1. Set-Up</h2><p>Participants work in a shared web interface in which they solve a &#39;who-done-it&#39; game like Clue or Cluedo, but involving a terrorist threat. Everyone in the game is solving the same puzzle.</p><p>Each participant has a personal &ldquo;inbox&rdquo; where they have their own list of facts and clues. In addition, at specified intervals of time, participants are able to use a &ldquo;search engine&rdquo; tool to look for more clues, which then appear in their inbox. For those who are working in groups, participants also have the ability to share clues by sending them to each other and to add comments to each other&#39;s clues.</p><br><h2>2. Objective / Goal</h2><p>The goal was to solve for four facts:</p><ol><li>Who would carry out the terrorist attack</li><li>What would be the target</li><li>Where the attack would take place</li><li>When the attack would take place.</li></ol><p>The game is designed so that there is exactly one correct answer for each of these four facts.</p><p>Participants submit their final answers via the web interface. Since there are multiple facts that need to be solved, participants are able to submit one &ldquo;solved&rdquo; fact at a time. They are also able to return to the submission page to change their answers at any point before the time limit ends. Participants are not given any feedback about whether their submissions are right or wrong, but when playing in a group, they are able to view what other people have been guessing so far (which can help provide a hint).</p><p>Participants are evaluated not only for correctly finding the exact facts, but also for solving the mystery as quickly as possible &mdash; they earn more points for finding each fact faster. Therefore, someone who finds all 4 facts in 2 minutes will earn more points than someone who submits the same answers, but takes 5 minutes to reach their conclusion.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/9961e4fe8aa541f6ef5f7b6cb171304ee81a2668,tasks/summaries/Game of Clue - Terrorist Attack-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Sudoku,"<h2>Sudoku</h2><br><h2>1. Set-Up</h2><p>Participants see a shared online system that displays a Sudoku puzzle. </p><p>Sudoku is a logic puzzle, in which there is a 9x9 grid, which is divided into nine 3x3 subgrids (also known as &ldquo;boxes&rdquo; or &ldquo;regions&rdquo;). Each cell in a region has a true underlying value from 1-9; however, most of the cells appear empty to the player, and only a few of them have the correct numbers filled in.</p><br><h2>2. Objective / Goal</h2><p>The goal is to solve the Sudoku puzzle within a limited amount of time. This means that participants need to fill in each blank cell with the correct underlying number from 1-9; in addition, they must satisfy the constraint that every row, every column, and every 3x3 region can only show each digit from 1-9 exactly once.</p><p>For a given Sudoku puzzle, there is only one correct answer. Participants either correctly identify the underlying value for every cell, or they fail the Sudoku game.</p><p>Finally, participants working in groups may use a chat function to discuss which value should be placed in a given cell.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/1ecd1c518ca1685a790722ea832907e6c90d660a,tasks/summaries/Sudoku-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Unscramble words (anagrams),"<h2>Unscramble words (anagrams)</h2><br><h2>1. Set-Up</h2><p>Participants see a shared list of 24 randomly scrambled words. For example, a word on the list could be, &ldquo;SEEMTRIMUM.&rdquo; This is an anagram (a word created by scrambling the letters) of the word &ldquo;SUMMERTIME.&rdquo;</p><br><h2>2. Objective / Goal</h2><p>The goal is to unscramble as many words from the list as possible in a limited amount of time. Each of the scambled words has exactly one correct answer. Participants obtain the highest score if they are able to unscramble all the words; otherwise, they earn points for every word that they are successfully able to unscramble. </p><p>Those working in a team are able to collaborate by discussing the words before they submit.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/30cf1ca8903915963d1a5a0435a8ef9c2966c3ec,tasks/summaries/Unscramble words (anagrams)-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Recall word lists,"<h2>Recall word lists</h2><br><h2>1. Set-Up</h2><p>Participants hear about a list of words. For example, they could listen to a tape of a male voice reading several words at the rate of one word per second.</p><br><h2>2. Objective / Goal</h2><p>The goal is to remember the list of words and then write down as many words from the list as possible. </p><p>Participants are required to start their list with the last word they heard, or else it is not counted. Otherwise, words can be written in any order. Participants have a limited amount of time to recall all the words they can.</p><p>The maximum score occurs if participants recall all words correctly. They get zero points for recalling no words, or for failing to start the list with the final word. Participants lose points for incorrectly recalling words that were not on the list. If working in a team, participants can collaborate to submit the final list of recalled words.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/d601341a49b846db778981bb57c8ae710c6ed11c,tasks/summaries/Recall word lists-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Architectural design task,"<h2>Architectural design task</h2><br><h2>1. Set-Up</h2><p>Participants receive written and video instructions of a task to design a house, a garage, and a pool in a computer program. Within the program, they have a limited number of building blocks of different color and size to use. For example, participants can view a table of available materials, in which they can see twenty-seven 1x1 red blocks, twelve 2x4 blue blocks, zero 1x6 orange blocks, etc. </p><p>Participants receive scoring information for each object. For example, participants can see that each square foot used to build a pool will bring them a $50 bonus and that following certain design restrictions (e.g., using certain colors for the pool and making it symmetric) will give them a $1500 bonus. Participants also receive rules to follow for building objects. For example, a pool must include a diving board and have blue floors.</p><br><h2>2. Objective / Goal</h2><p>The goal is to design a house, a garage, and a pool of as high value as possible. Three objects must be designed from a limited set of building blocks within a fixed amount of time. The task can only be considered completed if participants adhere to the provided rules for each building. If participants don&#39;t follow the building rules, their design project fails.</p><p>In other words, participants have to maximize the value of objects they are designing but they have to do so in a specific way, balancing tradeoffs of following the building rules and adding value to each object. Within these restrictions, however, they are free to be creative and produce any design they wish.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/f7804cfb2764f0421a91d2c04af7d05059987ccf,tasks/summaries/Architectural design task-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Space Fortress,"<h2>Space Fortress</h2><br><h2>1. Set-Up</h2><p>Participants see a video game, in which a &ldquo;space fortress&rdquo; is at the center of the screen. The fortress can rotate in all directions and fire off &ldquo;shells&rdquo; at anyone who attempts to attack it.</p><p>In this game, each subject controls a spaceship, which is able to fly around freely and shoot missiles at the space fortress. As they approach the space fortress, subjects must also dodge &ldquo;mines,&rdquo; which periodically appear on the screen and chase the subject&#39;s ship. If a mine hits the subject&#39;s ship, the spaceship will suffer damage. However, some special floating objects &mdash; which appear to be mines &mdash; will actually give the subject a &ldquo;power-up&rdquo; and damage the space fortress instead.</p><br><h2>2. Objective / Goal</h2><p>The goal of the game is to maximize points by destroying the space fortress. Participants need to attack the space fortress as much as possible while avoiding damage from enemy attacks and mines. This game can be either single-player or multiplayer; in either case, the objective is the same.</p><p>To summarize, participants earn points when:</p><ol><li>They successfully hit the fortress;</li><li>The fortress is destroyed (which requires hitting it repeatedly and progressively weakening it);</li><li>Participants earn a bonus in the game (e.g., through a power-up);</li><li>The participants destory or neutralize a mine.</li></ol><p>On the other hand, participants lose points when:</p><ol><li>Their ship is damaged (e.g., by an enemy shell or a mine);</li><li>Their ship is destroyed (which occurs after the ship suffers too much damage);</li><li>The participant runs out of missiles.</li></ol><p>Participants are evaluated on their final game score.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/4ac7263407418def53fe726df62e73be716f5707,tasks/summaries/Space Fortress-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Mastermind,"<h2>Mastermind</h2><br><h2>1. Set-Up</h2><p>Participants get a series of pegs, or points, of different colors to use in a logic game played on the computer. For example, participants can get 6 colors to use during the game: blue, red, green, orange, yellow, and purple.</p><p>As the game begins, an algorithm randomly designates a color pattern as the correct answer to the game. For example, the correct pattern to the game can consist of 4 colors, in this order: yellow, orange, yellow, red.</p><br><h2>2. Objective / Goal</h2><p>The goal is to identify all the colors and their positions from the correct pattern, using as few trials as possible and within a fixed amount of time.</p><p>As the game begins, participants have a limited number of trials to propose color patterns. Participants receive immediate feedback in the form of black and white pegs after each trial. A white peg means that one of the colors they chose is in the pattern (but in the wrong position); a black peg means that one of the colors they chose has both the color and the position correct.</p><p>For example, if the correct pattern is yellow, orange, yellow, red, and a participant proposes blue, green, orange, red, then this participants correctly identifies two colors from the pattern and a position of one of them correctly. Therefore, they would receive a white peg for orange (correct color, wrong position) and a black peg for red (correct color, correct position). However, participants don&#39;t know from the feedback exactly which color and position they identified correctly; instead, they have to try to deduce it from feedback for each trial.</p><p>Participants try to guess the pattern using as few tries as possible, and get the highest score by receiving as many pegs, especially black ones, as early in the game as possible.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/3e3bc094bd3bef84457f519fd02ab3e5217088c1,tasks/summaries/Mastermind-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
"NASA Moon survival","<h2>NASA Moon survival</h2><br><h2>1. Set-Up</h2><p>Participants view information describing a survival scenario in which a space ship crashes on the moon. The survivors are able to salvage a list of 15 items (e.g., matches, food concentrate, a 50-foot nylon rope, a portable heating unit, two 100-pound tanks of oxygen) from the wreckage. Everyone sees the same list of items. The survivors now need to carry the most important items on a 200-mile trek to get to &ldquo;home base.&rdquo;</p><br><h2>2. Objective / Goal</h2><p>The goal is to rank all 15 items in the order of most important to least important for survival, as the astronauts travel from the wrecked spaceship to home base. For example, if the oxygen tanks are the most important for survival, then they would receive the rank of 1. If the 50-foot rope is the least important for survival, then it gets the rank of 15.</p><p>Participants&#39; rankings are evaluated based on how close their rankings are to those created by a panel of experts from NASA. That is, the expert ranking is the &ldquo;true&rdquo; answer, and the closer a participant is to the true answer, the more points they earn. The highest possible score is achieved when participants rank all 15 items in the exact same order as the experts did.</p><p>If working in a team, participants are able to discuss the scenario with each other and come up with a single set of rankings as a team.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/611b7846e04bc728e40cfae30b313dfee1eeb306,tasks/summaries/NASA Moon survival-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
Arithmetic problem 1,"<h2>Arithmetic problem 1</h2><br><h2>1. Set-Up</h2><p>Participants see a hypothetical story problem about five people who operate five machines. The problem reads as follows:</p><p>You are a five man team whose job it is to manufacture a product, the completion of which requires the operation of five machines. In the past, you have rotated positions to avoid boredom, but each man has spent most of the time operating the machine that he prefers. John prefers machine 3, Steve machine 2, Walt machine 4, Robert machine 1, and Dennis machine 5. </p><p>The Methods man has been around checking the time each man requires to complete the operation on one product when he is operating each of the five machines. He has come up with the following results:</p><table><thead><tr><th></th><th>Machine 1</th><th>Machine 2</th><th>Machine 3</th><th>Machine 4</th><th>Machine 5</th></tr></thead><tbody><tr><td>John</td><td>3 min</td><td>3 min</td><td>4 min</td><td>3.5 min</td><td>4.5 min</td></tr><tr><td>Steve</td><td>2 min</td><td>2 min</td><td>5 min</td><td>2.5 min</td><td>3.5 min</td></tr><tr><td>Walt</td><td>1 min</td><td>2 min</td><td>5 min</td><td>2 min</td><td>1.5 min</td></tr><tr><td>Robert</td><td>4 min</td><td>1 min</td><td>3 min</td><td>3.5 min</td><td>3 min</td></tr><tr><td>Dennis</td><td>5 min</td><td>3 min</td><td>2 min</td><td>5 min</td><td>3 min</td></tr></tbody></table><p>Your foreman has noticed that when each man runs the machine that he most prefers, the total time spent on each product is 16 minutes. It seems to him that a different method of operation would result in substantial savings. He believes in letting his workers make their own decision, in so far as possible, and has asked that you consider the problem and try to come up with a plan that will be more efficient than the present mode of operation.</p><br><h2>2. Objective / Goal</h2><p>The goal is to pair each man with one of the machines, such that the amount of time it takes to manufacture the product is minimized.</p><p>There is exactly one right answer to this problem &mdash; it is to put Walt on machine 5, Steve on machine 4, Dennis on machine 3, Robert on machine 2, and John on machine 1. In the optimal answer, the total time to create the product is 10 minutes.</p><p>Participants have a limited amount of time to submit their answers. Those working in groups can discuss their answers before submitting in an online portal.</p><p>The task is graded based on how close a submission is to the true minimum time for creating the product. Submitting the correct answer (10 minutes) will give participants the highest possible score; a solution that builds the product in 11 minutes will get more points than a solution that builds the product in 15 minutes.</p>",https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/22ba525cd1a757777314e60b9f12fe6e6a5ab47b,tasks/summaries/Arithmetic problem 1-writeup.md,https://api.github.com/repos/Watts-Lab/task-mapping/git/blobs/59dd5f9f87d8820e84b07dfb579fd4d7919a710d
