import {showPracticeStage} from '../gameConfiguration';

const anger = {
  target: 'anger',
  words: [
    'mad',
    'fear',
    'hate',
    'rage',
    'temper',
    'fury',
    'ire',
    'wrath',
    'happy',
    'fight',
    'hatred',
    'mean',
    'calm',
    'emotion',
    'enrage',
  ],
};
const army = {
  target: 'army',
  words: [
    'Navy',
    'soldier',
    'United States',
    'rifle',
    'Air Force',
    'draft',
    'military',
    'Marines',
    'march',
    'infantry',
    'captain',
    'war',
    'uniform',
    'pilot',
    'combat',
  ],
};
const black = {
  target: 'black',
  words: [
    'white',
    'dark',
    'cat',
    'charred',
    'night',
    'funeral',
    'color',
    'grief',
    'blue',
    'death',
    'ink',
    'bottom',
    'coal',
    'brown',
    'gray',
  ],
};
const bread = {
  target: 'bread',
  words: [
    'butter',
    'food',
    'eat',
    'sandwich',
    'rye',
    'jam',
    'milk',
    'flour',
    'jelly',
    'dough',
    'crust',
    'slice',
    'wine',
    'loaf',
    'toast',
  ],
};
const car = {
  target: 'car',
  words: [
    'truck',
    'bus',
    'train',
    'automobile',
    'vehicle',
    'drive',
    'jeep',
    'Ford',
    'race',
    'keys',
    'garage',
    'highway',
    'sedan',
    'van',
    'taxi',
  ],
};
const chair = {
  target: 'chair',
  words: [
    'table',
    'sit',
    'legs',
    'seat',
    'couch',
    'desk',
    'recliner',
    'sofa',
    'wood',
    'cushion',
    'swivel',
    'stool',
    'sitting',
    'rocking',
    'bench',
  ],
};
const city = {
  target: 'city',
  words: [
    'town',
    'crowded',
    'state',
    'capital',
    'streets',
    'subway',
    'country',
    'New York',
    'village',
    'metropolis',
    'big',
    'Chicago',
    'suburb',
    'county',
    'urban',
  ],
};
const cold = {
  target: 'cold',
  words: [
    'hot',
    'snow',
    'warm',
    'winter',
    'ice',
    'wet',
    'frigid',
    'chilly',
    'heat',
    'weather',
    'freeze',
    'air',
    'shiver',
    'Arctic',
    'frost',
  ],
};
const cup = {
  target: 'cup',
  words: [
    'mug',
    'saucer',
    'tea',
    'measuring',
    'coaster',
    'lid',
    'handle',
    'coffee',
    'straw',
    'goblet',
    'soup',
    'stein',
    'drink',
    'plastic',
    'sip',
  ],
};
const doctor = {
  target: 'doctor',
  words: [
    'nurse',
    'sick',
    'lawyer',
    'medicine',
    'health',
    'hospital',
    'dentist',
    'physician',
    'ill',
    'patient',
    'office',
    'stethoscope',
    'surgeon',
    'clinic',
    'cure',
  ],
};
const flag = {
  target: 'flag',
  words: [
    'banner',
    'American',
    'symbol',
    'stars',
    'anthem',
    'stripes',
    'pole',
    'wave',
    'raised',
    'national',
    'checkered',
    'emblem',
    'sign',
    'freedom',
    'pendant',
  ],
};
const foot = {
  target: 'foot',
  words: [
    'shoe',
    'hand',
    'toe',
    'kick',
    'sandals',
    'soccer',
    'yard',
    'walk',
    'ankle',
    'arm',
    'boot',
    'inch',
    'sock',
    'knee',
    'mouth',
  ],
};
const fruit = {
  target: 'fruit',
  words: [
    'apple',
    'vegetable',
    'orange',
    'kiwi',
    'citrus',
    'ripe',
    'pear',
    'banana',
    'berry',
    'cherry',
    'basket',
    'juice',
    'salad',
    'bowl',
    'cocktail',
  ],
};
const girl = {
  target: 'girl',
  words: [
    'boy',
    'dolls',
    'female',
    'young',
    'dress',
    'pretty',
    'hair',
    'niece',
    'dance',
    'beautiful',
    'cute',
    'date',
    'aunt',
    'daughter',
    'sister',
  ],
};
const high = {
  target: 'high',
  words: [
    'low',
    'clouds',
    'up',
    'tall',
    'tower',
    'jump',
    'above',
    'building',
    'noon',
    'cliff',
    'sky',
    'over',
    'airplane',
    'dive',
    'elevate',
  ],
};
const king = {
  target: 'king',
  words: [
    'queen',
    'England',
    'crown',
    'prince',
    'George',
    'dictator',
    'palace',
    'throne',
    'chess',
    'rule',
    'subjects',
    'monarch',
    'royal',
    'leader',
    'reign',
  ],
};
const lion = {
  target: 'lion',
  words: [
    'tiger',
    'circus',
    'jungle',
    'tamer',
    'den',
    'cub',
    'Africa',
    'mane',
    'cage',
    'feline',
    'roar',
    'fierce',
    'bears',
    'hunt',
    'pride',
  ],
};
const man = {
  target: 'man',
  words: [
    'woman',
    'husband',
    'uncle',
    'lady',
    'mouse',
    'male',
    'father',
    'strong',
    'friend',
    'beard',
    'person',
    'handsome',
    'muscle',
    'suit',
    'old',
  ],
};
const mountain = {
  target: 'mountain',
  words: [
    'hill',
    'valley',
    'climb',
    'summit',
    'top',
    'molehill',
    'peak',
    'plain',
    'glacier',
    'goat',
    'bike',
    'climber',
    'range',
    'steep',
    'ski',
  ],
};
const music = {
  target: 'music',
  words: [
    'note',
    'sound',
    'piano',
    'sing',
    'radio',
    'band',
    'melody',
    'horn',
    'concert',
    'instrument',
    'symphony',
    'jazz',
    'orchestra',
    'art',
    'rhythm',
  ],
};
const needle = {
  target: 'needle',
  words: [
    'thread',
    'pin',
    'eye',
    'sewing',
    'sharp',
    'point',
    'prick',
    'thimble',
    'haystack',
    'thorn',
    'hurt',
    'injection',
    'syringe',
    'cloth',
    'knitting',
  ],
};
const pen = {
  target: 'pen',
  words: [
    'pencil',
    'write',
    'fountain',
    'leak',
    'quill',
    'felt',
    'Bic',
    'scribble',
    'crayon',
    'Cross',
    'tip',
    'marker',
    'red',
    'cap',
    'letter',
  ],
};
const river = {
  target: 'river',
  words: [
    'water',
    'stream',
    'lake',
    'Mississippi',
    'boat',
    'tide',
    'swim',
    'flow',
    'run',
    'barge',
    'creek',
    'brook',
    'fish',
    'bridge',
    'winding',
  ],
};
const rough = {
  target: 'rough',
  words: [
    'smooth',
    'bumpy',
    'road',
    'tough',
    'sandpaper',
    'jagged',
    'ready',
    'coarse',
    'uneven',
    'riders',
    'rugged',
    'sand',
    'boards',
    'ground',
    'gravel',
  ],
};
const rubber = {
  target: 'rubber',
  words: [
    'elastic',
    'bounce',
    'gloves',
    'tire',
    'ball',
    'eraser',
    'springy',
    'foam',
    'galoshes',
    'soles',
    'latex',
    'glue',
    'flexible',
    'resilient',
    'stretch',
  ],
};
const shirt = {
  target: 'shirt',
  words: [
    'blouse',
    'sleeves',
    'pants',
    'tie',
    'button',
    'shorts',
    'iron',
    'polo',
    'collar',
    'vest',
    'pocket',
    'jersey',
    'belt',
    'linen',
    'cuffs',
  ],
};
const sleep = {
  target: 'sleep',
  words: [
    'bed',
    'rest',
    'awake',
    'tired',
    'dream',
    'wake',
    'snooze',
    'blanket',
    'doze',
    'slumber',
    'snore',
    'nap',
    'peace',
    'yawn',
    'drowsy',
  ],
};
const slow = {
  target: 'slow',
  words: [
    'fast',
    'lethargic',
    'stop',
    'listless',
    'snail',
    'cautious',
    'delay',
    'traffic',
    'turtle',
    'hesitant',
    'speed',
    'quick',
    'sluggish',
    'wait',
    'molasses',
  ],
};
const smell = {
  target: 'smell',
  words: [
    'nose',
    'breathe',
    'sniff',
    'aroma',
    'hear',
    'see',
    'nostril',
    'whiff',
    'scent',
    'reek',
    'stench',
    'fragrance',
    'perfume',
    'salts',
    'rose',
  ],
};
const smoke = {
  target: 'smoke',
  words: [
    'cigarette',
    'puff',
    'blaze',
    'billows',
    'pollution',
    'ashes',
    'cigar',
    'chimney',
    'fire',
    'tobacco',
    'stink',
    'pipe',
    'lungs',
    'flames',
    'stain',
  ],
};
const soft = {
  target: 'soft',
  words: [
    'hard',
    'light',
    'pillow',
    'plush',
    'loud',
    'cotton',
    'fur',
    'touch',
    'fluffy',
    'feather',
    'furry',
    'downy',
    'kitten',
    'skin',
    'tender',
  ],
};
const spider = {
  target: 'spider',
  words: [
    'web',
    'insect',
    'bug',
    'fright',
    'fly',
    'arachnid',
    'crawl',
    'tarantula',
    'poison',
    'bite',
    'creepy',
    'animal',
    'ugly',
    'feelers',
    'small',
  ],
};
const sweet = {
  target: 'sweet',
  words: [
    'sour',
    'candy',
    'sugar',
    'bitter',
    'good',
    'taste',
    'tooth',
    'nice',
    'honey',
    'soda',
    'chocolate',
    'heart',
    'cake',
    'tart',
    'pie',
  ],
};
const thief = {
  target: 'thief',
  words: [
    'steal',
    'robber',
    'crook',
    'burglar',
    'money',
    'cop',
    'bad',
    'rob',
    'jail',
    'gun',
    'villain',
    'crime',
    'bank',
    'bandit',
    'criminal',
  ],
};
const trash = {
  target: 'trash',
  words: [
    'garbage',
    'waste',
    'can',
    'refuse',
    'sewage',
    'bag',
    'junk',
    'rubbish',
    'sweep',
    'scraps',
    'pile',
    'dump',
    'landfill',
    'debris',
    'litter',
  ],
};
const window = {
  target: 'window',
  words: [
    'door',
    'glass',
    'pane',
    'shade',
    'ledge',
    'sill',
    'house',
    'open',
    'curtain',
    'frame',
    'view',
    'breeze',
    'sash',
    'screen',
    'shutter',
  ],
};
const ALL_LISTS = [
  anger,
  army,
  black,
  bread,
  car,
  chair,
  city,
  cold,
  cup,
  doctor,
  flag,
  foot,
  fruit,
  girl,
  high,
  king,
  lion,
  man,
  mountain,
  music,
  needle,
  pen,
  river,
  rough,
  rubber,
  shirt,
  sleep,
  slow,
  smell,
  smoke,
  soft,
  spider,
  sweet,
  thief,
  trash,
  window,
];

const pointsAwarded = 100;
const pointsDeducted = 50;

export const TASK_CONFIG = [
  {
    name: 'Recall Association instance 0',
    calculateScore: !showPracticeStage,
    lists: [fruit, sweet], // list of objects that contains a parameter for the target and a words of associated words
    timeBetweenLists: 5000, // the time in milliseconds players have to look at each list
    numberOfProblems: 5, // the number of math problems players must solve
    condition: 'see', // group condition, can be one of 3 things: control, see, or no see
    recallTime: 10, // time given to recall a word in seconds
    pointsAwarded: pointsAwarded, // points awarded for each correct recall
    pointsDeducted: pointsDeducted, // points deducted for each incorrect recall
  },
  {
    name: 'Recall Association instance 1',
    calculateScore: true,
    lists: [anger, lion], // list of objects that contains a parameter for the target and a words of associated words
    timeBetweenLists: 4000, // the time in milliseconds players have to look at each list
    numberOfProblems: 5, // the number of math problems players must solve
    condition: 'see', // group condition, can be one of 3 things: control, see, or no see
    recallTime: 10, // time given to recall a word in seconds
    pointsAwarded: pointsAwarded, // points awarded for each correct recall
    pointsDeducted: pointsDeducted, // points deducted for each incorrect recall
  },
  {
    name: 'Recall Association instance 2',
    calculateScore: true,
    lists: [army, city, flag, needle], // list of objects that contains a parameter for the target and a words of associated words
    timeBetweenLists: 10000, // the time in milliseconds players have to look at each list
    numberOfProblems: 5, // the number of math problems players must solve
    condition: 'see', // group condition, can be one of 3 things: control, see, or no see
    recallTime: 10, // time given to recall a word in seconds
    pointsAwarded: pointsAwarded, // points awarded for each correct recall
    pointsDeducted: pointsDeducted, // points deducted for each incorrect recall
  },
  {
    name: 'Recall Association instance 3',
    calculateScore: true,
    lists: [window, smell, doctor, flag, car, bread], // list of objects that contains a parameter for the target and a words of associated words
    timeBetweenLists: 10000, // the time in milliseconds players have to look at each list
    numberOfProblems: 5, // the number of math problems players must solve
    condition: 'see', // group condition, can be one of 3 things: control, see, or no see
    recallTime: 10, // time given to recall a word in seconds
    pointsAwarded: pointsAwarded, // points awarded for each correct recall
    pointsDeducted: pointsDeducted, // points deducted for each incorrect recall
  },
];
